{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./projects/angular2gridster/src/lib/utils/utils.ts","./projects/angular2gridster/src/lib/gridList/gridList.ts","./projects/angular2gridster/src/lib/gridster.service.ts","./projects/angular2gridster/src/lib/GridsterOptions.ts","./projects/angular2gridster/src/lib/gridster-prototype/gridster-prototype.service.ts","./projects/angular2gridster/src/lib/gridster.component.ts","./projects/angular2gridster/src/lib/gridList/GridListItem.ts","./projects/angular2gridster/src/lib/utils/DraggableEvent.ts","./projects/angular2gridster/src/lib/utils/draggable.ts","./projects/angular2gridster/src/lib/gridster-item/gridster-item.component.ts","./projects/angular2gridster/src/lib/gridster-prototype/gridster-item-prototype.directive.ts","./projects/angular2gridster/src/lib/gridster.module.ts","./projects/angular2gridster/src/public_api.ts","./projects/angular2gridster/src/angular2gridster.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { GridsterComponent, IGridsterOptions, IGridsterDraggableOptions } from 'angular2gridster';\n\n@Component({\n    selector: 'demo-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n    static X_PROPERTY_MAP: any = {\n        sm: 'xSm',\n        md: 'xMd',\n        lg: 'xLg',\n        xl: 'xXl'\n    };\n\n    static Y_PROPERTY_MAP: any = {\n        sm: 'ySm',\n        md: 'yMd',\n        lg: 'yLg',\n        xl: 'yXl'\n    };\n\n    static W_PROPERTY_MAP: any = {\n        sm: 'wSm',\n        md: 'wMd',\n        lg: 'wLg',\n        xl: 'wXl'\n    };\n\n    static H_PROPERTY_MAP: any = {\n        sm: 'hSm',\n        md: 'hMd',\n        lg: 'hLg',\n        xl: 'hXl'\n    };\n\n    @ViewChild(GridsterComponent, { static: true }) gridster: GridsterComponent;\n    itemOptions = {\n        maxWidth: 3,\n        maxHeight: 4\n    };\n    gridsterOptions: IGridsterOptions = {\n        // core configuration is default one - for smallest view. It has hidden minWidth: 0.\n        lanes: 2, // amount of lanes (cells) in the grid\n        direction: 'vertical', // floating top - vertical, left - horizontal\n        floating: true,\n        dragAndDrop: true, // enable/disable drag and drop for all items in grid\n        resizable: true, // enable/disable resizing by drag and drop for all items in grid\n        resizeHandles: {\n            s: true,\n            e: true,\n            se: true\n        },\n        widthHeightRatio: 1, // proportion between item width and height\n        lines: {\n            visible: true,\n            color: '#afafaf',\n            width: 2\n        },\n        shrink: true,\n        useCSSTransforms: true,\n        responsiveView: true, // turn on adopting items sizes on window resize and enable responsiveOptions\n        responsiveDebounce: 500, // window resize debounce time\n        responsiveSizes: true,\n        responsiveToParent: true,\n        // List of different gridster configurations for different breakpoints.\n        // Each breakpoint is defined by name stored in \"breakpoint\" property. There is fixed set of breakpoints\n        // available to use with default minWidth assign to each.\n        // - sm: 576 - Small devices\n        // - md: 768 - Medium devices\n        // - lg: 992 - Large devices\n        // - xl: 1200 - Extra large\n        // MinWidth for each breakpoint can be overwritten like it's visible below.\n        // ResponsiveOptions can overwrite default configuration with any option available.\n        responsiveOptions: [\n            {\n                breakpoint: 'sm',\n                // minWidth: 480,\n                lanes: 3\n            },\n            {\n                breakpoint: 'md',\n                minWidth: 768,\n                lanes: 4\n            },\n            {\n                breakpoint: 'lg',\n                minWidth: 1250,\n                lanes: 6\n            },\n            {\n                breakpoint: 'xl',\n                minWidth: 1800,\n                lanes: 8\n            }\n        ]\n    };\n    gridsterDraggableOptions: IGridsterDraggableOptions = {\n        handlerClass: 'panel-heading'\n    };\n    title = 'Angular2Gridster';\n    widgetsCopy = [];\n    widgets: Array<any> = [\n        {\n            x: 0, y: 0,\n            w: 1, h: 2,\n            wSm: 1, hSm: 1,\n            wMd: 1, hMd: 2,\n            wLg: 1, hLg: 1,\n            wXl: 2, hXl: 2,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs 1'\n        },\n        {\n            x: 1, y: 0,\n            w: 1, h: 2,\n            wSm: 2, hSm: 1,\n            wMd: 2, hMd: 1,\n            wLg: 3, hLg: 1,\n            wXl: 3, hXl: 1,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs 2'\n        },\n        {\n            x: 1, y: 1,\n            w: 2, h: 1,\n            wSm: 1, hSm: 2,\n            wMd: 1, hMd: 2,\n            wLg: 2, hLg: 1,\n            wXl: 3, hXl: 1,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs 3'\n        },\n        {\n            x: 3, y: 1,\n            w: 1, h: 2,\n            wSm: 1, hSm: 2,\n            wMd: 1, hMd: 2,\n            wLg: 3, hLg: 1,\n            wXl: 3, hXl: 1,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs 4'\n        },\n        {\n            w: 1, h: 2,\n            wSm: 1, hSm: 2,\n            wMd: 1, hMd: 2,\n            wLg: 3, hLg: 1,\n            wXl: 3, hXl: 1,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs x'\n        }\n    ];\n\n    ngOnInit() {\n        this.widgetsCopy = this.widgets.map(widget => ({...widget}));\n    }\n\n    onReflow(event) {\n        console.log('onReflow', event);\n    }\n\n    removeLine(gridster: GridsterComponent) {\n        gridster.setOption('lanes', --this.gridsterOptions.lanes)\n            .reload();\n    }\n\n    getTitle() {\n        return this.title;\n    }\n\n    addLine(gridster: GridsterComponent) {\n        gridster.setOption('lanes', ++this.gridsterOptions.lanes)\n            .reload();\n    }\n\n    setWidth(widget: any, size: number, e: MouseEvent, gridster) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const breakpoint = gridster.options.breakpoint;\n        let newWidth = widget[AppComponent.W_PROPERTY_MAP[breakpoint] || 'w'] + size;\n        if (newWidth < 1) {\n            newWidth = 1;\n        }\n        widget[AppComponent.W_PROPERTY_MAP[breakpoint] || 'w'] = newWidth;\n\n        gridster.reload();\n\n        return false;\n    }\n\n    setHeight(widget: any, size: number, e: MouseEvent, gridster) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const breakpoint = gridster.options.breakpoint;\n        let newHeight = widget[AppComponent.H_PROPERTY_MAP[breakpoint] || 'h'] + size;\n        if (newHeight < 1) {\n            newHeight = 1;\n        }\n        widget[AppComponent.H_PROPERTY_MAP[breakpoint] || 'h'] = newHeight;\n\n        gridster.reload();\n\n        return false;\n    }\n\n    optionsChange(options: IGridsterOptions) {\n        this.gridsterOptions = options;\n        console.log('options change:', options);\n    }\n\n    swap() {\n        this.widgets[0].x = 3;\n        this.widgets[3].x = 0;\n    }\n\n    addWidgetFromDrag(gridster: GridsterComponent, event: any) {\n        const item = event.item;\n        const breakpoint = gridster.options.breakpoint;\n        const widget = {\n            dragAndDrop: true,\n            resizable: true,\n            title: 'New widget'\n        };\n\n        widget[AppComponent.W_PROPERTY_MAP[breakpoint] || 'w'] = item.w;\n        widget[AppComponent.H_PROPERTY_MAP[breakpoint] || 'h'] = item.h;\n        widget[AppComponent.X_PROPERTY_MAP[breakpoint] || 'x'] = item.x;\n        widget[AppComponent.Y_PROPERTY_MAP[breakpoint] || 'y'] = item.y;\n\n        for (const rwdProp of ['wSm', 'hSm', 'wMd', 'hMd', 'wLg', 'hLg', 'wXl', 'hXl']) {\n            if (event.item.itemPrototype.hasOwnProperty(rwdProp)) {\n                widget[rwdProp] = event.item.itemPrototype[rwdProp];\n            }\n        }\n\n        this.widgets.push(widget);\n\n        console.log('add widget from drag to:', gridster);\n    }\n\n    over(event) {\n        const size = event.item.calculateSize(event.gridster);\n\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = size.width + 'px';\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = size.height + 'px';\n        event.item.itemPrototype.$element.classList.add('is-over');\n    }\n\n    out(event) {\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = '';\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = '';\n        event.item.itemPrototype.$element.classList.remove('is-over');\n    }\n\n    addWidgetWithoutData() {\n        this.widgets.push({\n            title: 'Basic form inputs X',\n            dragAndDrop: true,\n            resizable: true,\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\n            'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\n            'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\n            'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\n            'laborum.'\n        });\n    }\n\n    addWidget(gridster: GridsterComponent) {\n        this.widgets.push({\n            x: 4, y: 0, w: 1, h: 1,\n            dragAndDrop: true,\n            resizable: true,\n            title: 'Basic form inputs 5',\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\n            'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\n            'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\n            'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\n            'laborum.'\n        });\n        console.log('widget push', this.widgets[this.widgets.length - 1]);\n    }\n\n    remove($event, index: number, gridster: GridsterComponent) {\n        $event.preventDefault();\n        this.widgets.splice(index, 1);\n        console.log('widget remove', index);\n    }\n\n    removeAllWidgets() {\n        this.widgets = [];\n    }\n\n    itemChange($event: any, gridster) {\n        console.log('item change', $event);\n    }\n\n    resetWidgets() {\n        this.widgets = this.widgetsCopy.map(widget => ({...widget}));\n    }\n}\n","<div class=\"omnibar\">\n  <div class=\"toolbar\">\n      Lanes:\n      <button (click)=\"removeLine(gridster)\">-</button>\n      {{ gridsterOptions.lanes }}\n      <button (click)=\"addLine(gridster)\">+</button>\n\n      <button (click)=\"addWidgetWithoutData()\">\n          Add widget without data\n      </button>\n\n      <button (click)=\"removeAllWidgets()\">\n          Remove all widgets\n      </button>\n\n      <button (click)=\"resetWidgets()\">\n          Reset widgets\n      </button>\n\n      <br>\n      <label for=\"ratio\">Ratio</label><input type=\"number\" id=\"ratio\" [(ngModel)]=\"gridsterOptions.widthHeightRatio\" min=\"0.1\"\n                                             (change)=\"gridster.setOption('widthHeightRatio', gridsterOptions.widthHeightRatio).reload()\">\n\n      <input id=\"draggable\" type=\"checkbox\" [(ngModel)]=\"gridsterOptions.dragAndDrop\" value=\"true\"\n             (change)=\"gridster.setOption('dragAndDrop', gridsterOptions.dragAndDrop)\"><label for=\"draggable\">Draggable</label>\n\n      <input type=\"checkbox\" [(ngModel)]=\"gridsterOptions.resizable\" value=\"true\" id=\"resizable\"\n             (change)=\"gridster.setOption('resizable', gridsterOptions.resizable)\"><label for=\"resizable\">Resizable</label>\n\n      <input type=\"checkbox\" [(ngModel)]=\"gridsterOptions.floating\" value=\"true\" id=\"floating\"\n             (change)=\"gridster.setOption('floating', gridsterOptions.floating)\"><label for=\"floating\">Floating (gravity)</label>\n      <br>\n      Direction\n      <label>\n          <input type=\"radio\" [(ngModel)]=\"gridsterOptions.direction\" value=\"none\"\n                 (change)=\"gridster.setOption('direction', 'none').reload()\">None\n      </label>\n      <label>\n          <input type=\"radio\" [(ngModel)]=\"gridsterOptions.direction\" value=\"horizontal\"\n                 (change)=\"gridster.setOption('direction', 'horizontal').reload()\">Horizontal\n      </label>\n      <label>\n          <input type=\"radio\" [(ngModel)]=\"gridsterOptions.direction\" value=\"vertical\"\n                 (change)=\"gridster.setOption('direction', 'vertical').reload()\">Vertical\n      </label>\n      <br>\n      Max item size: {{itemOptions.maxWidth}} x {{itemOptions.maxHeight}}\n  </div>\n  <div class=\"widgetbar\">\n      <div ngxGridsterItemPrototype [config]=\"{helper: true}\"\n           [w]=\"1\" [h]=\"1\"\n           [wSm]=\"1\" [hSm]=\"1\"\n           [wMd]=\"2\" [hMd]=\"1\"\n           [wLg]=\"2\" [hLg]=\"2\"\n           [wXl]=\"3\" [hXl]=\"2\"\n           (drop)=\"addWidgetFromDrag(gridster, $event)\"\n           (enter)=\"over($event)\"\n           (out)=\"out($event)\"\n           class=\"gridster-item-prototype\">\n          Drag me (clone)<br>\n          1x1\n          <div _ngcontent-uoe-1=\"\" class=\"gridster-item-inner\" style=\"width: 0;height: 0;\">\n              <div _ngcontent-uoe-2=\"\" class=\"panel-heading\">\n                  <h5 _ngcontent-uoe-2=\"\" class=\"panel-title\">New widget</h5>\n              </div>\n          </div>\n      </div>\n\n      <div ngxGridsterItemPrototype [config]=\"{helper: true}\"\n           [w]=\"2\" [h]=\"2\"\n           (drop)=\"addWidgetFromDrag(gridster, $event)\"\n           (enter)=\"over($event)\"\n           (out)=\"out($event)\"\n           class=\"gridster-item-prototype\">\n          Drag me (clone)<br>\n          1x2\n          <div _ngcontent-uoe-1=\"\" class=\"gridster-item-inner\" style=\"width: 0;height: 0;\">\n              <div _ngcontent-uoe-2=\"\" class=\"panel-heading\">\n                  <h5 _ngcontent-uoe-2=\"\" class=\"panel-title\">New widget</h5>\n              </div>\n          </div>\n      </div>\n\n      <div ngxGridsterItemPrototype [config]=\"{helper: false}\"\n           [w]=\"2\" [h]=\"1\"\n           (drop)=\"addWidgetFromDrag(gridster, $event)\"\n           (enter)=\"over($event)\"\n           (out)=\"out($event)\"\n           class=\"gridster-item-prototype\">\n          Drag me <br>\n          2x1\n          <div _ngcontent-uoe-1=\"\" class=\"gridster-item-inner\" style=\"width: 0;height: 0;\">\n              <div _ngcontent-uoe-2=\"\" class=\"panel-heading\">\n                  <h5 _ngcontent-uoe-2=\"\" class=\"panel-title\">New widget</h5>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n<div class=\"main-content\">\n\n  <ngx-gridster [options]=\"gridsterOptions\" [draggableOptions]=\"gridsterDraggableOptions\" (reflow)=\"onReflow($event)\"\n            (optionsChange)=\"optionsChange($event)\" #gridster1 class=\"dashboard\">\n\n      <ngx-gridster-item *ngFor=\"let widget of widgets; let indx = index\" #itemComp\n                     [options]=\"itemOptions\"\n                     [dragAndDrop]=\"widget.dragAndDrop\" [resizable]=\"widget.resizable\"\n                     [(x)]=\"widget.x\" [(y)]=\"widget.y\"\n                     [(xSm)]=\"widget.xSm\" [(ySm)]=\"widget.ySm\"\n                     [(xMd)]=\"widget.xMd\" [(yMd)]=\"widget.yMd\"\n                     [(xLg)]=\"widget.xLg\" [(yLg)]=\"widget.yLg\"\n                     [(xXl)]=\"widget.xXl\" [(yXl)]=\"widget.yXl\"\n                     [(w)]=\"widget.w\" [(h)]=\"widget.h\"\n                     [(wSm)]=\"widget.wSm\" [(hSm)]=\"widget.hSm\"\n                     [(wMd)]=\"widget.wMd\" [(hMd)]=\"widget.hMd\"\n                     [(wLg)]=\"widget.wLg\" [(hLg)]=\"widget.hLg\"\n                     [(wXl)]=\"widget.wXl\" [(hXl)]=\"widget.hXl\"\n                     (change)=\"itemChange($event, gridster1)\">\n\n          <div class=\"panel-heading\">\n              <h5 class=\"panel-title\">{{ widget.title }}</h5>\n          </div>\n\n          <div class=\"panel-body\">\n              <p>\n                Position: {{itemComp?.item?.x}} x {{itemComp?.item?.y}}<br>\n                Size: {{itemComp?.item?.w}} x {{itemComp?.item?.h}}<br>\n              </p>\n              <p>\n                  <label>\n                      <input type=\"checkbox\" [(ngModel)]=\"widget.dragAndDrop\" value=\"true\"> Draggable\n                  </label>\n                  <label>\n                      <input type=\"checkbox\" [(ngModel)]=\"widget.resizable\" value=\"true\"> Resizable\n                  </label>\n                  <button (click)=\"setWidth(widget, 1, $event, gridster1)\">width +</button>\n                  <button (click)=\"setWidth(widget, -1, $event, gridster1)\">width -</button>\n                  <button (click)=\"setHeight(widget, 1, $event, gridster1)\">height +</button>\n                  <button (click)=\"setHeight(widget, -1, $event, gridster1)\">height -</button>\n              </p>\n              <p>\n                  <button (click)=\"remove($event, indx,gridster1)\">remove</button>\n              </p>\n\n              <pre>{{ widget | json }}</pre>\n\n          </div>\n\n      </ngx-gridster-item>\n\n  </ngx-gridster>\n</div>\n","import { GridsterModule } from 'angular2gridster';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    GridsterModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","\nimport { DraggableEvent } from './DraggableEvent';\n\nexport const utils = {\n    setCssElementPosition: function ($element: HTMLElement, position: {x: number, y: number}) {\n        $element.style.left = position.x + 'px';\n        $element.style.top = position.y + 'px';\n    },\n    resetCSSElementPosition: function ($element: HTMLElement) {\n        $element.style.left = '';\n        $element.style.top = '';\n    },\n    setTransform: function ($element: HTMLElement, position: {x: number, y: number}) {\n        const left = position.x;\n        const top = position.y;\n\n        // Replace unitless items with px\n        const translate = `translate(${left}px,${top}px)`;\n\n        $element.style['transform'] = translate;\n        $element.style['WebkitTransform'] = translate;\n        $element.style['MozTransform'] = translate;\n        $element.style['msTransform'] = translate;\n        $element.style['OTransform'] = translate;\n    },\n    resetTransform: function ($element: HTMLElement) {\n        $element.style['transform'] = '';\n        $element.style['WebkitTransform'] = '';\n        $element.style['MozTransform'] = '';\n        $element.style['msTransform'] = '';\n        $element.style['OTransform'] = '';\n    },\n    clearSelection: () => {\n        if (document['selection']) {\n            document['selection'].empty();\n        } else if (window.getSelection) {\n            window.getSelection().removeAllRanges();\n        }\n    },\n    isElementFitContainer: function (element: HTMLElement, containerEl: HTMLElement): boolean {\n        const containerRect = containerEl.getBoundingClientRect();\n        const elRect = element.getBoundingClientRect();\n\n        return elRect.left > containerRect.left &&\n            elRect.right < containerRect.right &&\n            elRect.top > containerRect.top &&\n            elRect.bottom < containerRect.bottom;\n    },\n    isElementIntersectContainer: function (element: HTMLElement, containerEl: HTMLElement): boolean {\n        const containerRect = containerEl.getBoundingClientRect();\n        const elRect = element.getBoundingClientRect();\n\n        const elWidth = elRect.right - elRect.left;\n        const elHeight = elRect.bottom - elRect.top;\n\n        return (elRect.left + (elWidth / 2)) > containerRect.left &&\n            (elRect.right - (elWidth / 2)) < containerRect.right &&\n            (elRect.top + (elHeight / 2)) > containerRect.top &&\n            (elRect.bottom - (elHeight / 2)) < containerRect.bottom;\n    },\n    isElementTouchContainer: function (element: HTMLElement, containerEl: HTMLElement): boolean {\n        const containerRect = containerEl.getBoundingClientRect();\n        const elRect = element.getBoundingClientRect();\n\n        return elRect.right > containerRect.left &&\n            elRect.bottom > containerRect.top &&\n            elRect.left < containerRect.right &&\n            elRect.top < containerRect.bottom;\n    },\n    isCursorAboveElement: function (event: DraggableEvent, element): boolean {\n        const elRect = element.getBoundingClientRect();\n\n        return event.pageX > elRect.left &&\n            event.pageX < elRect.right &&\n            event.pageY > elRect.top &&\n            event.pageY < elRect.bottom;\n    },\n    getElementOuterHeight: function ($element: HTMLElement) {\n        const styleObj = window.getComputedStyle($element);\n        // NOTE: Manually calculating height because IE's `clientHeight` isn't always\n        // reliable.\n        return parseFloat(styleObj.getPropertyValue('height')) +\n            parseFloat(styleObj.getPropertyValue('padding-top')) +\n            parseFloat(styleObj.getPropertyValue('padding-bottom'));\n    },\n    getRelativeCoordinates: (element, parentElement): {top: number, left: number} => {\n        const parentElementRect = parentElement.getBoundingClientRect();\n        const elementRect = element.getBoundingClientRect();\n\n        return {\n            top: elementRect.top - parentElementRect.top,\n            left: elementRect.left - parentElementRect.left\n        };\n    },\n    getScrollableContainer(node) {\n        const regex = /(auto|scroll)/;\n        const parents = (_node, ps) => {\n            if (_node.parentNode === null) {\n                return ps;\n            }\n            return parents(_node.parentNode, ps.concat([_node]));\n        };\n\n        const style = (_node, prop) => {\n            return getComputedStyle(_node, null).getPropertyValue(prop);\n        };\n        const overflow = _node => {\n            return (\n                style(_node, 'overflow') + style(_node, 'overflow-y') + style(_node, 'overflow-x')\n            );\n        };\n        const scroll = _node => regex.test(overflow(_node));\n\n        /* eslint-disable consistent-return */\n        const scrollParent = _node => {\n            if (!(_node instanceof HTMLElement || _node instanceof SVGElement)) {\n                return;\n            }\n\n            const ps = parents(_node.parentNode, []);\n\n            for (let i = 0; i < ps.length; i += 1) {\n                if (scroll(ps[i])) {\n                    return ps[i];\n                }\n            }\n\n            return document.scrollingElement || document.documentElement;\n        };\n\n        return scrollParent(node);\n    }\n};\n","import { GridListItem } from './GridListItem';\nimport { IGridsterOptions } from '../IGridsterOptions';\n\nconst GridCol = function(lanes) {\n    for (let i = 0; i < lanes; i++) {\n        this.push(null);\n    }\n};\n// Extend the Array prototype\nGridCol.prototype = [];\n\n/**\n * A GridList manages the two-dimensional positions from a list of items,\n * within a virtual matrix.\n *\n * The GridList's main function is to convert the item positions from one\n * grid size to another, maintaining as much of their order as possible.\n *\n * The GridList's second function is to handle collisions when moving an item\n * over another.\n *\n * The positioning algorithm places items in columns. Starting from left to\n * right, going through each column top to bottom.\n *\n * The size of an item is expressed using the number of cols and rows it\n * takes up within the grid (w and h)\n *\n * The position of an item is express using the col and row position within\n * the grid (x and y)\n *\n * An item is an object of structure:\n * {\n *   w: 3, h: 1,\n *   x: 0, y: 1\n * }\n */\nexport class GridList {\n    items: Array<GridListItem>;\n    grid: Array<Array<GridListItem>>;\n\n    options: IGridsterOptions;\n\n    constructor(items: Array<GridListItem>, options: IGridsterOptions) {\n        this.options = options;\n\n        this.items = items;\n\n        this.adjustSizeOfItems();\n\n        this.generateGrid();\n    }\n\n    /**\n     * Illustrates grid as text-based table, using a number identifier for each\n     * item. E.g.\n     *\n     *  #|  0  1  2  3  4  5  6  7  8  9 10 11 12 13\n     *  --------------------------------------------\n     *  0| 00 02 03 04 04 06 08 08 08 12 12 13 14 16\n     *  1| 01 -- 03 05 05 07 09 10 11 11 -- 13 15 --\n     *\n     * Warn: Does not work if items don't have a width or height specified\n     * besides their position in the grid.\n     */\n    toString() {\n        const widthOfGrid = this.grid.length;\n        let output = '\\n #|',\n            border = '\\n --',\n            item,\n            i,\n            j;\n\n        // Render the table header\n        for (i = 0; i < widthOfGrid; i++) {\n            output += ' ' + this.padNumber(i, ' ');\n            border += '---';\n        }\n        output += border;\n\n        // Render table contents row by row, as we go on the y axis\n        for (i = 0; i < this.options.lanes; i++) {\n            output += '\\n' + this.padNumber(i, ' ') + '|';\n            for (j = 0; j < widthOfGrid; j++) {\n                output += ' ';\n                item = this.grid[j][i];\n                output += item\n                    ? this.padNumber(this.items.indexOf(item), '0')\n                    : '--';\n            }\n        }\n        output += '\\n';\n        return output;\n    }\n\n    setOption(name: string, value: any) {\n        this.options[name] = value;\n    }\n\n    /**\n     * Build the grid structure from scratch, with the current item positions\n     */\n    generateGrid() {\n        let i;\n        this.resetGrid();\n        for (i = 0; i < this.items.length; i++) {\n            this.markItemPositionToGrid(this.items[i]);\n        }\n    }\n\n    resizeGrid(lanes: number) {\n        let currentColumn = 0;\n\n        this.options.lanes = lanes;\n        this.adjustSizeOfItems();\n\n        this.sortItemsByPosition();\n        this.resetGrid();\n\n        // The items will be sorted based on their index within the this.items array,\n        // that is their \"1d position\"\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i],\n                position = this.getItemPosition(item);\n\n            this.updateItemPosition(\n                item,\n                this.findPositionForItem(item, { x: currentColumn, y: 0 })\n            );\n\n            // New items should never be placed to the left of previous items\n            currentColumn = Math.max(currentColumn, position.x);\n        }\n\n        this.pullItemsToLeft();\n    }\n\n    /**\n     * This method has two options for the position we want for the item:\n     * - Starting from a certain row/column number and only looking for\n     *   positions to its right\n     * - Accepting positions for a certain row number only (use-case: items\n     *   being shifted to the left/right as a result of collisions)\n     *\n     * @param Object item\n     * @param Object start Position from which to start\n     *     the search.\n     * @param number [fixedRow] If provided, we're going to try to find a\n     *     position for the new item on it. If doesn't fit there, we're going\n     *     to put it on the first row.\n     *\n     * @returns Array x and y.\n     */\n    findPositionForItem(\n        item: GridListItem,\n        start: { x: number; y: number },\n        fixedRow?: number\n    ): Array<number> {\n        let x, y, position;\n\n        // Start searching for a position from the horizontal position of the\n        // rightmost item from the grid\n        for (x = start.x; x < this.grid.length; x++) {\n            if (fixedRow !== undefined) {\n                position = [x, fixedRow];\n\n                if (this.itemFitsAtPosition(item, position)) {\n                    return position;\n                }\n            } else {\n                for (y = start.y; y < this.options.lanes; y++) {\n                    position = [x, y];\n\n                    if (this.itemFitsAtPosition(item, position)) {\n                        return position;\n                    }\n                }\n            }\n        }\n\n        // If we've reached this point, we need to start a new column\n        const newCol = this.grid.length;\n        let newRow = 0;\n\n        if (\n            fixedRow !== undefined &&\n            this.itemFitsAtPosition(item, [newCol, fixedRow])\n        ) {\n            newRow = fixedRow;\n        }\n\n        return [newCol, newRow];\n    }\n\n    moveAndResize(\n        item: GridListItem,\n        newPosition: Array<number>,\n        size: { w: number; h: number }\n    ) {\n        const position = this.getItemPosition({\n            x: newPosition[0],\n            y: newPosition[1],\n            w: item.w,\n            h: item.h\n        });\n        const width = size.w || item.w,\n            height = size.h || item.h;\n\n        this.updateItemPosition(item, [position.x, position.y]);\n        this.updateItemSize(item, width, height);\n\n        this.resolveCollisions(item);\n    }\n\n    moveItemToPosition(item: GridListItem, newPosition: Array<number>) {\n        const position = this.getItemPosition({\n            x: newPosition[0],\n            y: newPosition[1],\n            w: item.w,\n            h: item.h\n        });\n\n        this.updateItemPosition(item, [position.x, position.y]);\n        this.resolveCollisions(item);\n    }\n\n    /**\n     * Resize an item and resolve collisions.\n     *\n     * @param Object item A reference to an item that's part of the grid.\n     * @param Object size\n     * @param number [size.w=item.w] The new width.\n     * @param number [size.h=item.h] The new height.\n     */\n    resizeItem(item: GridListItem, size: { w: number; h: number }) {\n        const width = size.w || item.w,\n            height = size.h || item.h;\n\n        this.updateItemSize(item, width, height);\n\n        this.pullItemsToLeft(item);\n    }\n\n    /**\n     * Compare the current items against a previous snapshot and return only\n     * the ones that changed their attributes in the meantime. This includes both\n     * position (x, y) and size (w, h)\n     *\n     * Each item that is returned is not the GridListItem but the helper that holds GridListItem\n     * and list of changed properties.\n     */\n    getChangedItems(\n        initialItems: Array<GridListItem>,\n        breakpoint?\n    ): Array<{\n        item: GridListItem;\n        changes: Array<string>;\n        isNew: boolean;\n    }> {\n        return this.items\n            .map((item: GridListItem) => {\n                const changes = [];\n                const oldValues: {\n                    x?: number;\n                    y?: number;\n                    w?: number;\n                    h?: number;\n                } = {};\n                const initItem = initialItems.find(\n                    initItm => initItm.$element === item.$element\n                );\n\n                if (!initItem) {\n                    return { item, changes: ['x', 'y', 'w', 'h'], isNew: true };\n                }\n\n                const oldX = initItem.getValueX(breakpoint);\n                if (item.getValueX(breakpoint) !== oldX) {\n                    changes.push('x');\n                    if (oldX || oldX === 0) {\n                        oldValues.x = oldX;\n                    }\n                }\n\n                const oldY = initItem.getValueY(breakpoint);\n                if (item.getValueY(breakpoint) !== oldY) {\n                    changes.push('y');\n                    if (oldY || oldY === 0) {\n                        oldValues.y = oldY;\n                    }\n                }\n                if (\n                    item.getValueW(breakpoint) !==\n                    initItem.getValueW(breakpoint)\n                ) {\n                    changes.push('w');\n                    oldValues.w = initItem.w;\n                }\n                if (\n                    item.getValueH(breakpoint) !==\n                    initItem.getValueH(breakpoint)\n                ) {\n                    changes.push('h');\n                    oldValues.h = initItem.h;\n                }\n\n                return { item, oldValues, changes, isNew: false };\n            })\n            .filter(\n                (itemChange: {\n                    item: GridListItem;\n                    changes: Array<string>;\n                }) => {\n                    return itemChange.changes.length;\n                }\n            );\n    }\n\n    resolveCollisions(item: GridListItem) {\n        if (!this.tryToResolveCollisionsLocally(item)) {\n            this.pullItemsToLeft(item);\n        }\n        if (this.options.floating) {\n            this.pullItemsToLeft();\n        } else if (this.getItemsCollidingWithItem(item).length) {\n            this.pullItemsToLeft();\n        }\n    }\n\n    pushCollidingItems(fixedItem?: GridListItem) {\n        // Start a fresh grid with the fixed item already placed inside\n        this.sortItemsByPosition();\n        this.resetGrid();\n        this.generateGrid();\n\n        this.items\n            .filter(item => !this.isItemFloating(item) && item !== fixedItem)\n            .forEach(item => {\n                if (!this.tryToResolveCollisionsLocally(item)) {\n                    this.pullItemsToLeft(item);\n                }\n            });\n    }\n\n    /**\n     * Build the grid from scratch, by using the current item positions and\n     * pulling them as much to the left as possible, removing as space between\n     * them as possible.\n     *\n     * If a \"fixed item\" is provided, its position will be kept intact and the\n     * rest of the items will be layed around it.\n     */\n    pullItemsToLeft(fixedItem?) {\n        if (this.options.direction === 'none') {\n            return;\n        }\n\n        // Start a fresh grid with the fixed item already placed inside\n        this.sortItemsByPosition();\n        this.resetGrid();\n\n        // Start the grid with the fixed item as the first positioned item\n        if (fixedItem) {\n            const fixedPosition = this.getItemPosition(fixedItem);\n            this.updateItemPosition(fixedItem, [\n                fixedPosition.x,\n                fixedPosition.y\n            ]);\n        }\n\n        this.items\n            .filter((item: GridListItem) => {\n                return !item.dragAndDrop && item !== fixedItem;\n            })\n            .forEach((item: GridListItem) => {\n                const fixedPosition = this.getItemPosition(item);\n                this.updateItemPosition(item, [\n                    fixedPosition.x,\n                    fixedPosition.y\n                ]);\n            });\n\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i],\n                position = this.getItemPosition(item);\n\n            // The fixed item keeps its exact position\n            if (\n                (fixedItem && item === fixedItem) ||\n                !item.dragAndDrop ||\n                (!this.options.floating &&\n                    this.isItemFloating(item) &&\n                    !this.getItemsCollidingWithItem(item).length)\n            ) {\n                continue;\n            }\n\n            const x = this.findLeftMostPositionForItem(item),\n                newPosition = this.findPositionForItem(\n                    item,\n                    { x: x, y: 0 },\n                    position.y\n                );\n\n            this.updateItemPosition(item, newPosition);\n        }\n    }\n\n    isOverFixedArea(\n        x: number,\n        y: number,\n        w: number,\n        h: number,\n        item: GridListItem = null\n    ): boolean {\n        let itemData = { x, y, w, h };\n\n        if (this.options.direction !== 'horizontal') {\n            itemData = { x: y, y: x, w: h, h: w };\n        }\n\n        for (let i = itemData.x; i < itemData.x + itemData.w; i++) {\n            for (let j = itemData.y; j < itemData.y + itemData.h; j++) {\n                if (\n                    this.grid[i] &&\n                    this.grid[i][j] &&\n                    this.grid[i][j] !== item &&\n                    !this.grid[i][j].dragAndDrop\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    checkItemAboveEmptyArea(\n        item: GridListItem,\n        newPosition: { x: number; y: number }\n    ) {\n        let itemData = {\n            x: newPosition.x,\n            y: newPosition.y,\n            w: item.w,\n            h: item.h\n        };\n        if (\n            !item.itemPrototype &&\n            item.x === newPosition.x &&\n            item.y === newPosition.y\n        ) {\n            return true;\n        }\n\n        if (this.options.direction === 'horizontal') {\n            itemData = {\n                x: newPosition.y,\n                y: newPosition.x,\n                w: itemData.h,\n                h: itemData.w\n            };\n        }\n        return !this.checkItemsInArea(\n            itemData.y,\n            itemData.y + itemData.h - 1,\n            itemData.x,\n            itemData.x + itemData.w - 1,\n            item\n        );\n    }\n\n    fixItemsPositions(options: IGridsterOptions) {\n        // items with x, y that fits gird with size of options.lanes\n        const validItems = this.items\n            .filter((item: GridListItem) => item.itemComponent)\n            .filter((item: GridListItem) =>\n                this.isItemValidForGrid(item, options)\n            );\n        // items that x, y must be generated\n        const invalidItems = this.items\n            .filter((item: GridListItem) => item.itemComponent)\n            .filter(\n                (item: GridListItem) => !this.isItemValidForGrid(item, options)\n            );\n\n        const gridList = new GridList([], options);\n\n        // put items with defined positions to the grid\n        gridList.items = validItems.map((item: GridListItem) => {\n            return item.copyForBreakpoint(options.breakpoint);\n        });\n\n        gridList.generateGrid();\n\n        invalidItems.forEach(item => {\n            // TODO: check if this change does not broke anything\n            // const itemCopy = item.copy();\n            const itemCopy = item.copyForBreakpoint(options.breakpoint);\n            const position = gridList.findPositionForItem(itemCopy, {\n                x: 0,\n                y: 0\n            });\n\n            gridList.items.push(itemCopy);\n            gridList.setItemPosition(itemCopy, position);\n            gridList.markItemPositionToGrid(itemCopy);\n        });\n\n        gridList.pullItemsToLeft();\n        gridList.pushCollidingItems();\n\n        this.items.forEach((itm: GridListItem) => {\n            const cachedItem = gridList.items.filter(cachedItm => {\n                return cachedItm.$element === itm.$element;\n            })[0];\n\n            itm.setValueX(cachedItem.x, options.breakpoint);\n            itm.setValueY(cachedItem.y, options.breakpoint);\n            itm.setValueW(cachedItem.w, options.breakpoint);\n            itm.setValueH(cachedItem.h, options.breakpoint);\n            itm.autoSize = cachedItem.autoSize;\n        });\n    }\n\n    deleteItemPositionFromGrid(item: GridListItem) {\n        const position = this.getItemPosition(item);\n        let x, y;\n\n        for (x = position.x; x < position.x + position.w; x++) {\n            // It can happen to try to remove an item from a position not generated\n            // in the grid, probably when loading a persisted grid of items. No need\n            // to create a column to be able to remove something from it, though\n            if (!this.grid[x]) {\n                continue;\n            }\n\n            for (y = position.y; y < position.y + position.h; y++) {\n                // Don't clear the cell if it's been occupied by a different widget in\n                // the meantime (e.g. when an item has been moved over this one, and\n                // thus by continuing to clear this item's previous position you would\n                // cancel the first item's move, leaving it without any position even)\n                if (this.grid[x][y] === item) {\n                    this.grid[x][y] = null;\n                }\n            }\n        }\n    }\n\n    private isItemFloating(item) {\n        if (item.itemComponent && item.itemComponent.isDragging) {\n            return false;\n        }\n        const position = this.getItemPosition(item);\n\n        if (position.x === 0) {\n            return false;\n        }\n        const rowBelowItem = this.grid[position.x - 1];\n\n        return (rowBelowItem || [])\n            .slice(position.y, position.y + position.h)\n            .reduce((isFloating, cellItem) => {\n                return isFloating && !cellItem;\n            }, true);\n    }\n\n    private isItemValidForGrid(item: GridListItem, options: IGridsterOptions) {\n        const itemData =\n            options.direction === 'horizontal'\n                ? {\n                      x: item.getValueY(options.breakpoint),\n                      y: item.getValueX(options.breakpoint),\n                      w: item.getValueH(options.breakpoint),\n                      h: Math.min(\n                          item.getValueW(this.options.breakpoint),\n                          options.lanes\n                      )\n                  }\n                : {\n                      x: item.getValueX(options.breakpoint),\n                      y: item.getValueY(options.breakpoint),\n                      w: Math.min(\n                          item.getValueW(this.options.breakpoint),\n                          options.lanes\n                      ),\n                      h: item.getValueH(options.breakpoint)\n                  };\n\n        return (\n            typeof itemData.x === 'number' &&\n            typeof itemData.y === 'number' &&\n            itemData.x + itemData.w <= options.lanes\n        );\n    }\n\n    private findDefaultPositionHorizontal(width: number, height: number) {\n        for (const col of this.grid) {\n            const colIdx = this.grid.indexOf(col);\n            let rowIdx = 0;\n            while (rowIdx < col.length - height + 1) {\n                if (\n                    !this.checkItemsInArea(\n                        colIdx,\n                        colIdx + width - 1,\n                        rowIdx,\n                        rowIdx + height - 1\n                    )\n                ) {\n                    return [colIdx, rowIdx];\n                }\n                rowIdx++;\n            }\n        }\n        return [this.grid.length, 0];\n    }\n\n    private findDefaultPositionVertical(width: number, height: number) {\n        for (const row of this.grid) {\n            const rowIdx = this.grid.indexOf(row);\n            let colIdx = 0;\n            while (colIdx < row.length - width + 1) {\n                if (\n                    !this.checkItemsInArea(\n                        rowIdx,\n                        rowIdx + height - 1,\n                        colIdx,\n                        colIdx + width - 1\n                    )\n                ) {\n                    return [colIdx, rowIdx];\n                }\n                colIdx++;\n            }\n        }\n        return [0, this.grid.length];\n    }\n\n    private checkItemsInArea(\n        rowStart: number,\n        rowEnd: number,\n        colStart: number,\n        colEnd: number,\n        item?: GridListItem\n    ) {\n        for (let i = rowStart; i <= rowEnd; i++) {\n            for (let j = colStart; j <= colEnd; j++) {\n                if (\n                    this.grid[i] &&\n                    this.grid[i][j] &&\n                    (item ? this.grid[i][j] !== item : true)\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private sortItemsByPosition() {\n        this.items.sort((item1, item2) => {\n            const position1 = this.getItemPosition(item1),\n                position2 = this.getItemPosition(item2);\n\n            // Try to preserve columns.\n            if (position1.x !== position2.x) {\n                return position1.x - position2.x;\n            }\n\n            if (position1.y !== position2.y) {\n                return position1.y - position2.y;\n            }\n\n            // The items are placed on the same position.\n            return 0;\n        });\n    }\n\n    /**\n     * Some items can have 100% height or 100% width. Those dimmensions are\n     * expressed as 0. We need to ensure a valid width and height for each of\n     * those items as the number of items per lane.\n     */\n    private adjustSizeOfItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n\n            // This can happen only the first time items are checked.\n            // We need the property to have a value for all the items so that the\n            // `cloneItems` method will merge the properties properly. If we only set\n            // it to the items that need it then the following can happen:\n            //\n            // cloneItems([{id: 1, autoSize: true}, {id: 2}],\n            //            [{id: 2}, {id: 1, autoSize: true}]);\n            //\n            // will result in\n            //\n            // [{id: 1, autoSize: true}, {id: 2, autoSize: true}]\n            if (item.autoSize === undefined) {\n                item.autoSize = item.w === 0 || item.h === 0;\n            }\n\n            if (item.autoSize) {\n                if (this.options.direction === 'horizontal') {\n                    item.h = this.options.lanes;\n                } else {\n                    item.w = this.options.lanes;\n                }\n            }\n        }\n    }\n\n    private resetGrid() {\n        this.grid = [];\n    }\n\n    /**\n     * Check that an item wouldn't overlap with another one if placed at a\n     * certain position within the grid\n     */\n    private itemFitsAtPosition(item: GridListItem, newPosition) {\n        const position = this.getItemPosition(item);\n        let x, y;\n\n        // No coordonate can be negative\n        if (newPosition[0] < 0 || newPosition[1] < 0) {\n            return false;\n        }\n\n        // Make sure the item isn't larger than the entire grid\n        if (\n            newPosition[1] + Math.min(position.h, this.options.lanes) >\n            this.options.lanes\n        ) {\n            return false;\n        }\n\n        if (this.isOverFixedArea(item.x, item.y, item.w, item.h)) {\n            return false;\n        }\n\n        // Make sure the position doesn't overlap with an already positioned\n        // item.\n        for (x = newPosition[0]; x < newPosition[0] + position.w; x++) {\n            const col = this.grid[x];\n            // Surely a column that hasn't even been created yet is available\n            if (!col) {\n                continue;\n            }\n\n            for (y = newPosition[1]; y < newPosition[1] + position.h; y++) {\n                // Any space occupied by an item can continue to be occupied by the\n                // same item.\n                if (col[y] && col[y] !== item) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    private updateItemPosition(item: GridListItem, position: Array<any>) {\n        if (item.x !== null && item.y !== null) {\n            this.deleteItemPositionFromGrid(item);\n        }\n\n        this.setItemPosition(item, position);\n\n        this.markItemPositionToGrid(item);\n    }\n\n    /**\n     * @param Object item A reference to a grid item.\n     * @param number width The new width.\n     * @param number height The new height.\n     */\n    private updateItemSize(item: GridListItem, width, height) {\n        if (item.x !== null && item.y !== null) {\n            this.deleteItemPositionFromGrid(item);\n        }\n\n        item.w = width;\n        item.h = height;\n\n        this.markItemPositionToGrid(item);\n    }\n\n    /**\n     * Mark the grid cells that are occupied by an item. This prevents items\n     * from overlapping in the grid\n     */\n    private markItemPositionToGrid(item: GridListItem) {\n        const position = this.getItemPosition(item);\n        let x, y;\n\n        // Ensure that the grid has enough columns to accomodate the current item.\n        this.ensureColumns(position.x + position.w);\n\n        for (x = position.x; x < position.x + position.w; x++) {\n            for (y = position.y; y < position.y + position.h; y++) {\n                this.grid[x][y] = item;\n            }\n        }\n    }\n\n    /**\n     * Ensure that the grid has at least N columns available.\n     */\n    private ensureColumns(N) {\n        for (let i = 0; i < N; i++) {\n            if (!this.grid[i]) {\n                this.grid.push(new GridCol(this.options.lanes));\n            }\n        }\n    }\n\n    private getItemsCollidingWithItem(item: GridListItem): number[] {\n        const collidingItems = [];\n        for (let i = 0; i < this.items.length; i++) {\n            if (\n                item !== this.items[i] &&\n                this.itemsAreColliding(item, this.items[i])\n            ) {\n                collidingItems.push(i);\n            }\n        }\n        return collidingItems;\n    }\n\n    private itemsAreColliding(item1: GridListItem, item2: GridListItem) {\n        const position1 = this.getItemPosition(item1),\n            position2 = this.getItemPosition(item2);\n\n        return !(\n            position2.x >= position1.x + position1.w ||\n            position2.x + position2.w <= position1.x ||\n            position2.y >= position1.y + position1.h ||\n            position2.y + position2.h <= position1.y\n        );\n    }\n\n    /**\n     * Attempt to resolve the collisions after moving an item over one or more\n     * other items within the grid, by shifting the position of the colliding\n     * items around the moving one. This might result in subsequent collisions,\n     * in which case we will revert all position permutations. To be able to\n     * revert to the initial item positions, we create a virtual grid in the\n     * process\n     */\n    private tryToResolveCollisionsLocally(item: GridListItem) {\n        const collidingItems = this.getItemsCollidingWithItem(item);\n        if (!collidingItems.length) {\n            return true;\n        }\n\n        const _gridList = new GridList(\n            this.items.map(itm => {\n                return itm.copy();\n            }),\n            this.options\n        );\n\n        let leftOfItem;\n        let rightOfItem;\n        let aboveOfItem;\n        let belowOfItem;\n\n        for (let i = 0; i < collidingItems.length; i++) {\n            const collidingItem = _gridList.items[collidingItems[i]],\n                collidingPosition = this.getItemPosition(collidingItem);\n\n            // We use a simple algorithm for moving items around when collisions occur:\n            // In this prioritized order, we try to move a colliding item around the\n            // moving one:\n            // 1. to its left side\n            // 2. above it\n            // 3. under it\n            // 4. to its right side\n            const position = this.getItemPosition(item);\n\n            leftOfItem = [\n                position.x - collidingPosition.w,\n                collidingPosition.y\n            ];\n            rightOfItem = [position.x + position.w, collidingPosition.y];\n            aboveOfItem = [\n                collidingPosition.x,\n                position.y - collidingPosition.h\n            ];\n            belowOfItem = [collidingPosition.x, position.y + position.h];\n\n            if (_gridList.itemFitsAtPosition(collidingItem, leftOfItem)) {\n                _gridList.updateItemPosition(collidingItem, leftOfItem);\n            } else if (\n                _gridList.itemFitsAtPosition(collidingItem, aboveOfItem)\n            ) {\n                _gridList.updateItemPosition(collidingItem, aboveOfItem);\n            } else if (\n                _gridList.itemFitsAtPosition(collidingItem, belowOfItem)\n            ) {\n                _gridList.updateItemPosition(collidingItem, belowOfItem);\n            } else if (\n                _gridList.itemFitsAtPosition(collidingItem, rightOfItem)\n            ) {\n                _gridList.updateItemPosition(collidingItem, rightOfItem);\n            } else {\n                // Collisions failed, we must use the pullItemsToLeft method to arrange\n                // the other items around this item with fixed position. This is our\n                // plan B for when local collision resolving fails.\n                return false;\n            }\n        }\n        // If we reached this point it means we managed to resolve the collisions\n        // from one single iteration, just by moving the colliding items around. So\n        // we accept this scenario and merge the branched-out grid instance into the\n        // original one\n\n        this.items.forEach((itm: GridListItem, idx: number) => {\n            const cachedItem = _gridList.items.filter(cachedItm => {\n                return cachedItm.$element === itm.$element;\n            })[0];\n\n            itm.x = cachedItem.x;\n            itm.y = cachedItem.y;\n            itm.w = cachedItem.w;\n            itm.h = cachedItem.h;\n            itm.autoSize = cachedItem.autoSize;\n        });\n        this.generateGrid();\n        return true;\n    }\n\n    /**\n     * When pulling items to the left, we need to find the leftmost position for\n     * an item, with two considerations in mind:\n     * - preserving its current row\n     * - preserving the previous horizontal order between items\n     */\n    private findLeftMostPositionForItem(item) {\n        let tail = 0;\n        const position = this.getItemPosition(item);\n\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = position.y; j < position.y + position.h; j++) {\n                const otherItem = this.grid[i][j];\n\n                if (!otherItem) {\n                    continue;\n                }\n\n                const otherPosition = this.getItemPosition(otherItem);\n\n                if (this.items.indexOf(otherItem) < this.items.indexOf(item)) {\n                    tail = otherPosition.x + otherPosition.w;\n                }\n            }\n        }\n\n        return tail;\n    }\n\n    private findItemByPosition(x: number, y: number): GridListItem {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i].x === x && this.items[i].y === y) {\n                return this.items[i];\n            }\n        }\n    }\n\n    private getItemByAttribute(key, value) {\n        for (let i = 0; i < this.items.length; i++) {\n            if (this.items[i][key] === value) {\n                return this.items[i];\n            }\n        }\n        return null;\n    }\n\n    private padNumber(nr, prefix) {\n        // Currently works for 2-digit numbers (<100)\n        return nr >= 10 ? nr : prefix + nr;\n    }\n\n    /**\n     * If the direction is vertical we need to rotate the grid 90 deg to the\n     * left. Thus, we simulate the fact that items are being pulled to the top.\n     *\n     * Since the items have widths and heights, if we apply the classic\n     * counter-clockwise 90 deg rotation\n     *\n     *     [0 -1]\n     *     [1  0]\n     *\n     * then the top left point of an item will become the bottom left point of\n     * the rotated item. To adjust for this, we need to subtract from the y\n     * position the height of the original item - the width of the rotated item.\n     *\n     * However, if we do this then we'll reverse some actions: resizing the\n     * width of an item will stretch the item to the left instead of to the\n     * right; resizing an item that doesn't fit into the grid will push the\n     * items around it instead of going on a new row, etc.\n     *\n     * We found it better to do a vertical flip of the grid after rotating it.\n     * This restores the direction of the actions and greatly simplifies the\n     * transformations.\n     */\n    private getItemPosition(item: any) {\n        if (this.options.direction === 'horizontal') {\n            return item;\n        } else {\n            return {\n                x: item.y,\n                y: item.x,\n                w: item.h,\n                h: item.w\n            };\n        }\n    }\n\n    /**\n     * See getItemPosition.\n     */\n    private setItemPosition(item, position) {\n        if (this.options.direction === 'horizontal') {\n            item.x = position[0];\n            item.y = position[1];\n        } else {\n            // We're supposed to subtract the rotated item's height which is actually\n            // the non-rotated item's width.\n            item.x = position[1];\n            item.y = position[0];\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { GridList } from './gridList/gridList';\nimport { IGridsterOptions } from './IGridsterOptions';\nimport { IGridsterDraggableOptions } from './IGridsterDraggableOptions';\nimport { GridListItem } from './gridList/GridListItem';\nimport { GridsterComponent } from './gridster.component';\nimport { GridsterOptions } from './GridsterOptions';\n\n@Injectable()\nexport class GridsterService {\n    $element: HTMLElement;\n\n    gridList: GridList;\n\n    items: Array<GridListItem> = [];\n    _items: Array<GridListItem> = [];\n    _itemsMap: { [breakpoint: string]: Array<GridListItem> } = {};\n    disabledItems: Array<GridListItem> = [];\n\n    options: IGridsterOptions;\n    draggableOptions: IGridsterDraggableOptions;\n\n    gridsterRect: ClientRect;\n    gridsterScrollData: { scrollTop: number, scrollLeft: number };\n\n    gridsterOptions: GridsterOptions;\n\n    gridsterComponent: GridsterComponent;\n\n    debounceRenderSubject = new Subject();\n\n    public $positionHighlight: HTMLElement;\n\n    public maxItemWidth: number;\n    public maxItemHeight: number;\n\n    public cellWidth: number;\n    public cellHeight: number;\n\n    public itemRemoveSubject: Subject<GridListItem> = new Subject();\n\n    private _fontSize: number;\n\n    private previousDragPosition: Array<number>;\n    private previousDragSize: Array<number>;\n\n    private currentElement: HTMLElement;\n\n    private _maxGridCols: number;\n\n    private isInit = false;\n\n    constructor() {\n        this.itemRemoveSubject.pipe(debounceTime(0)).subscribe(() => {\n            this.gridList.pullItemsToLeft();\n            this.render();\n            this.updateCachedItems();\n        });\n\n        this.debounceRenderSubject.pipe(debounceTime(0)).subscribe(() => this.render());\n    }\n\n    isInitialized(): boolean {\n        return this.isInit;\n    }\n\n    /**\n     * Must be called before init\n     * @param item\n     */\n    registerItem(item: GridListItem) {\n\n        this.items.push(item);\n        return item;\n    }\n\n    init(gridsterComponent: GridsterComponent) {\n\n        this.gridsterComponent = gridsterComponent;\n\n        this.draggableOptions = gridsterComponent.draggableOptions;\n\n        this.gridsterOptions = gridsterComponent.gridsterOptions;\n    }\n\n    start() {\n        this.updateMaxItemSize();\n\n        // Used to highlight a position an element will land on upon drop\n        if (this.$positionHighlight) {\n            this.removePositionHighlight();\n        }\n\n        this.initGridList();\n\n        this.isInit = true;\n\n        setTimeout(() => {\n            this.copyItems();\n            this.fixItemsPositions();\n\n            this.gridsterComponent.reflowGridster(true);\n            this.gridsterComponent.setReady();\n        });\n    }\n\n    initGridList() {\n        // Create instance of GridList (decoupled lib for handling the grid\n        // positioning and sorting post-drag and dropping)\n        this.gridList = new GridList(this.items, this.options);\n    }\n\n    render() {\n        this.updateMaxItemSize();\n        this.gridList.generateGrid();\n        this.applySizeToItems();\n        this.applyPositionToItems();\n        this.refreshLines();\n    }\n\n    reflow() {\n        this.calculateCellSize();\n        this.render();\n    }\n\n    fixItemsPositions() {\n        if (this.options.responsiveSizes) {\n            this.gridList.fixItemsPositions(this.options);\n        } else {\n            this.gridList.fixItemsPositions(this.gridsterOptions.basicOptions);\n            this.gridsterOptions.responsiveOptions.forEach((options: IGridsterOptions) => {\n                this.gridList.fixItemsPositions(options);\n            });\n        }\n\n        this.updateCachedItems();\n    }\n\n    removeItem(item: GridListItem) {\n        const idx = this.items.indexOf(item);\n\n        if (idx >= 0) {\n            this.items.splice(this.items.indexOf(item), 1);\n        }\n\n        this.gridList.deleteItemPositionFromGrid(item);\n        this.removeItemFromCache(item);\n    }\n\n    onResizeStart(item: GridListItem) {\n        this.currentElement = item.$element;\n\n        this.copyItems();\n\n        this._maxGridCols = this.gridList.grid.length;\n\n        this.highlightPositionForItem(item);\n\n        this.gridsterComponent.isResizing = true;\n\n        this.refreshLines();\n    }\n\n    onResizeDrag(item: GridListItem) {\n        const newSize = this.snapItemSizeToGrid(item);\n        const sizeChanged = this.dragSizeChanged(newSize);\n        const newPosition = this.snapItemPositionToGrid(item);\n        const positionChanged = this.dragPositionChanged(newPosition);\n\n        if (sizeChanged || positionChanged) {\n            // Regenerate the grid with the positions from when the drag started\n            this.restoreCachedItems();\n            this.gridList.generateGrid();\n\n            this.previousDragPosition = newPosition;\n            this.previousDragSize = newSize;\n\n            this.gridList.moveAndResize(item, newPosition, {w: newSize[0], h: newSize[1]});\n\n            // Visually update item positions and highlight shape\n            this.applyPositionToItems(true);\n            this.highlightPositionForItem(item);\n        }\n    }\n\n    onResizeStop(item: GridListItem) {\n        this.currentElement = undefined;\n        this.updateCachedItems();\n        this.previousDragSize = null;\n\n        this.removePositionHighlight();\n\n        this.gridsterComponent.isResizing = false;\n\n        this.gridList.pullItemsToLeft(item);\n        this.debounceRenderSubject.next(null);\n\n        this.fixItemsPositions();\n    }\n\n    onStart(item: GridListItem) {\n        this.currentElement = item.$element;\n        // itemCtrl.isDragging = true;\n        // Create a deep copy of the items; we use them to revert the item\n        // positions after each drag change, making an entire drag operation less\n        // distructable\n        this.copyItems();\n\n        // Since dragging actually alters the grid, we need to establish the number\n        // of cols (+1 extra) before the drag starts\n\n        this._maxGridCols = this.gridList.grid.length;\n\n        this.gridsterComponent.isDragging = true;\n        this.gridsterComponent.updateGridsterElementData();\n\n        this.refreshLines();\n    }\n\n    onDrag(item: GridListItem) {\n        const newPosition = this.snapItemPositionToGrid(item);\n\n        if (this.dragPositionChanged(newPosition)) {\n\n            // Regenerate the grid with the positions from when the drag started\n            this.restoreCachedItems();\n            this.gridList.generateGrid();\n\n            this.previousDragPosition = newPosition;\n            if (this.options.direction === 'none' &&\n                !this.gridList.checkItemAboveEmptyArea(item, {x: newPosition[0], y: newPosition[1]})) {\n                return;\n            }\n\n            // Since the items list is a deep copy, we need to fetch the item\n            // corresponding to this drag action again\n            this.gridList.moveItemToPosition(item, newPosition);\n\n            // Visually update item positions and highlight shape\n            this.applyPositionToItems(true);\n            this.highlightPositionForItem(item);\n        }\n    }\n\n    cancel() {\n        this.restoreCachedItems();\n        this.previousDragPosition = null;\n        this.updateMaxItemSize();\n        this.applyPositionToItems();\n        this.removePositionHighlight();\n        this.currentElement = undefined;\n        this.gridsterComponent.isDragging = false;\n    }\n\n    onDragOut (item: GridListItem) {\n\n        this.cancel();\n\n        const idx = this.items.indexOf(item);\n        if (idx >= 0) {\n            this.items.splice(idx, 1);\n        }\n\n        this.gridList.pullItemsToLeft();\n        this.render();\n    }\n\n    onStop(item: GridListItem) {\n        this.currentElement = undefined;\n        this.updateCachedItems();\n        this.previousDragPosition = null;\n\n        this.removePositionHighlight();\n\n        this.gridList.pullItemsToLeft(item);\n\n        this.gridsterComponent.isDragging = false;\n\n        this.refreshLines();\n    }\n\n    calculateCellSize() {\n        if (this.options.direction === 'horizontal') {\n            this.cellHeight = this.calculateCellHeight();\n            this.cellWidth = this.options.cellWidth || this.cellHeight * this.options.widthHeightRatio;\n        } else {\n            this.cellWidth = this.calculateCellWidth();\n            this.cellHeight = this.options.cellHeight || this.cellWidth / this.options.widthHeightRatio;\n        }\n        if (this.options.heightToFontSizeRatio) {\n            this._fontSize = this.cellHeight * this.options.heightToFontSizeRatio;\n        }\n    }\n\n    applyPositionToItems(increaseGridsterSize?) {\n        if (!this.options.shrink) {\n            increaseGridsterSize = true;\n        }\n        // TODO: Implement group separators\n        for (let i = 0; i < this.items.length; i++) {\n            // Don't interfere with the positions of the dragged items\n            if (this.isCurrentElement(this.items[i].$element)) {\n                continue;\n            }\n            this.items[i].applyPosition(this);\n        }\n\n        const child = <HTMLElement>this.gridsterComponent.$element.firstChild;\n        // Update the width of the entire grid container with enough room on the\n        // right to allow dragging items to the end of the grid.\n        if (this.options.direction === 'horizontal') {\n            const increaseWidthWith = (increaseGridsterSize) ? this.maxItemWidth : 0;\n            child.style.height = '';\n            child.style.width = ((this.gridList.grid.length + increaseWidthWith) * this.cellWidth) + 'px';\n\n        } else if (this.gridList.grid.length) {\n            const increaseHeightWith = (increaseGridsterSize) ? this.maxItemHeight : 0;\n            child.style.height = ((this.gridList.grid.length + increaseHeightWith) * this.cellHeight) + 'px';\n            child.style.width = '';\n        }\n    }\n\n    refreshLines() {\n        const gridsterContainer = <HTMLElement>this.gridsterComponent.$element.firstChild;\n\n        if (this.options.lines && this.options.lines.visible &&\n            (this.gridsterComponent.isDragging || this.gridsterComponent.isResizing || this.options.lines.always)) {\n            const linesColor = this.options.lines.color || '#d8d8d8';\n            const linesBgColor = this.options.lines.backgroundColor || 'transparent';\n            const linesWidth = this.options.lines.width || 1;\n            const bgPosition = linesWidth / 2;\n\n            gridsterContainer.style.backgroundSize = `${this.cellWidth}px ${this.cellHeight}px`;\n            gridsterContainer.style.backgroundPosition = `-${bgPosition}px -${bgPosition}px`;\n            gridsterContainer.style.backgroundImage = `\n                linear-gradient(to right, ${linesColor} ${linesWidth}px, ${linesBgColor} ${linesWidth}px),\n                linear-gradient(to bottom, ${linesColor} ${linesWidth}px, ${linesBgColor} ${linesWidth}px)\n            `;\n        } else {\n            gridsterContainer.style.backgroundSize = '';\n            gridsterContainer.style.backgroundPosition = '';\n            gridsterContainer.style.backgroundImage = '';\n        }\n    }\n\n    private removeItemFromCache(item: GridListItem) {\n        this._items = this._items\n            .filter(cachedItem => cachedItem.$element !== item.$element);\n\n        Object.keys(this._itemsMap)\n            .forEach((breakpoint: string) => {\n                this._itemsMap[breakpoint] = this._itemsMap[breakpoint]\n                    .filter(cachedItem => cachedItem.$element !== item.$element);\n            });\n    }\n\n    private copyItems(): void {\n        this._items = this.items\n            .filter(item => this.isValidGridItem(item))\n            .map((item: GridListItem) => {\n                return item.copyForBreakpoint(null);\n            });\n\n        this.gridsterOptions.responsiveOptions.forEach((options: IGridsterOptions) => {\n            this._itemsMap[options.breakpoint] = this.items\n                .filter(item => this.isValidGridItem(item))\n                .map((item: GridListItem) => {\n                    return item.copyForBreakpoint(options.breakpoint);\n                });\n        });\n    }\n\n    /**\n     * Update maxItemWidth and maxItemHeight vales according to current state of items\n     */\n    private updateMaxItemSize() {\n        this.maxItemWidth = Math.max.apply(\n            null, this.items.map((item) => {\n                return item.w;\n            }));\n        this.maxItemHeight = Math.max.apply(\n            null, this.items.map((item) => {\n                return item.h;\n            }));\n    }\n\n    /**\n     * Update items properties of previously cached items\n     */\n    private restoreCachedItems() {\n        const items = this.options.breakpoint ? this._itemsMap[this.options.breakpoint] : this._items;\n\n        this.items\n            .filter(item => this.isValidGridItem(item))\n            .forEach((item: GridListItem) => {\n                const cachedItem: GridListItem = items.filter(cachedItm => {\n                    return cachedItm.$element === item.$element;\n                })[0];\n\n                item.x = cachedItem.x;\n                item.y = cachedItem.y;\n\n                item.w = cachedItem.w;\n                item.h = cachedItem.h;\n                item.autoSize = cachedItem.autoSize;\n            });\n    }\n\n    /**\n     * If item should react on grid\n     * @param GridListItem item\n     * @returns boolean\n     */\n    private isValidGridItem(item: GridListItem): boolean {\n        if (this.options.direction === 'none') {\n            return !!item.itemComponent;\n        }\n        return true;\n    }\n\n    private calculateCellWidth() {\n        const gridsterWidth = parseFloat(window.getComputedStyle(this.gridsterComponent.$element).width);\n\n        return gridsterWidth / this.options.lanes;\n    }\n\n    private calculateCellHeight() {\n        const gridsterHeight = parseFloat(window.getComputedStyle(this.gridsterComponent.$element).height);\n\n        return gridsterHeight / this.options.lanes;\n    }\n\n    private applySizeToItems() {\n        for (let i = 0; i < this.items.length; i++) {\n            this.items[i].applySize();\n\n            if (this.options.heightToFontSizeRatio) {\n                this.items[i].$element.style['font-size'] = this._fontSize;\n            }\n        }\n    }\n\n    private isCurrentElement(element) {\n        if (!this.currentElement) {\n            return false;\n        }\n        return element === this.currentElement;\n    }\n\n    private snapItemSizeToGrid(item: GridListItem): Array<number> {\n        const itemSize = {\n            width: parseInt(item.$element.style.width, 10) - 1,\n            height: parseInt(item.$element.style.height, 10) - 1\n        };\n\n        let colSize = Math.round(itemSize.width / this.cellWidth);\n        let rowSize = Math.round(itemSize.height / this.cellHeight);\n\n        // Keep item minimum 1\n        colSize = Math.max(colSize, 1);\n        rowSize = Math.max(rowSize, 1);\n\n        // check if element is pinned\n        if (this.gridList.isOverFixedArea(item.x, item.y, colSize, rowSize, item)) {\n            return [item.w, item.h];\n        }\n\n        return [colSize, rowSize];\n    }\n\n    private generateItemPosition(item: GridListItem): { x: number, y: number } {\n        let position;\n\n        if (item.itemPrototype) {\n            const coords = item.itemPrototype.getPositionToGridster(this);\n            position = {\n                x: Math.round(coords.x / this.cellWidth),\n                y: Math.round(coords.y / this.cellHeight)\n            };\n        } else {\n            position = {\n                x: Math.round(item.positionX / this.cellWidth),\n                y: Math.round(item.positionY / this.cellHeight)\n            };\n        }\n\n        return position;\n    }\n\n    private snapItemPositionToGrid(item: GridListItem) {\n        const position = this.generateItemPosition(item);\n        let col = position.x;\n        let row = position.y;\n\n        // Keep item position within the grid and don't let the item create more\n        // than one extra column\n        col = Math.max(col, 0);\n        row = Math.max(row, 0);\n\n        if (this.options.direction === 'horizontal') {\n            col = Math.min(col, this._maxGridCols);\n        } else {\n            col = Math.min(col, Math.max(0, this.options.lanes - item.w));\n        }\n\n        // check if element is pinned\n        if (this.gridList.isOverFixedArea(col, row, item.w, item.h)) {\n            return [item.x, item.y];\n        }\n\n        return [col, row];\n    }\n\n    private dragSizeChanged(newSize): boolean {\n        if (!this.previousDragSize) {\n            return true;\n        }\n        return (newSize[0] !== this.previousDragSize[0] ||\n            newSize[1] !== this.previousDragSize[1]);\n    }\n\n    private dragPositionChanged(newPosition): boolean {\n        if (!this.previousDragPosition) {\n            return true;\n        }\n        return (newPosition[0] !== this.previousDragPosition[0] ||\n            newPosition[1] !== this.previousDragPosition[1]);\n    }\n\n    private highlightPositionForItem(item) {\n        const size = item.calculateSize(this);\n        const position = item.calculatePosition(this);\n\n        this.$positionHighlight.style.width = size.width + 'px';\n        this.$positionHighlight.style.height = size.height + 'px';\n        this.$positionHighlight.style.left = position.left + 'px';\n        this.$positionHighlight.style.top = position.top + 'px';\n        this.$positionHighlight.style.display = '';\n\n        if (this.options.heightToFontSizeRatio) {\n            this.$positionHighlight.style['font-size'] = this._fontSize;\n        }\n    }\n\n    public updateCachedItems() {\n        // Notify the user with the items that changed since the previous snapshot\n        this.triggerOnChange(null);\n        this.gridsterOptions.responsiveOptions.forEach((options: IGridsterOptions) => {\n            this.triggerOnChange(options.breakpoint);\n        });\n\n        this.copyItems();\n    }\n\n    private triggerOnChange(breakpoint?) {\n        const items = breakpoint ? this._itemsMap[breakpoint] : this._items;\n        const changeItems = this.gridList.getChangedItems(items || [], breakpoint);\n\n        changeItems\n            .filter((itemChange: any) => {\n                return itemChange.item.itemComponent;\n            })\n            .forEach((itemChange: any) => {\n\n                if (itemChange.changes.indexOf('x') >= 0) {\n                    itemChange.item.triggerChangeX(breakpoint);\n                }\n                if (itemChange.changes.indexOf('y') >= 0) {\n                    itemChange.item.triggerChangeY(breakpoint);\n                }\n                if (itemChange.changes.indexOf('w') >= 0) {\n                    itemChange.item.triggerChangeW(breakpoint);\n                }\n                if (itemChange.changes.indexOf('h') >= 0) {\n                    itemChange.item.triggerChangeH(breakpoint);\n                }\n                // should be called only once (not for each breakpoint)\n                itemChange.item.itemComponent.change.emit({\n                    item: itemChange.item,\n                    oldValues: itemChange.oldValues || {},\n                    isNew: itemChange.isNew,\n                    changes: itemChange.changes,\n                    breakpoint: breakpoint\n                });\n            });\n    }\n\n    private removePositionHighlight() {\n        this.$positionHighlight.style.display = 'none';\n    }\n\n}\n","import { Observable, of, fromEvent, pipe, merge } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { IGridsterOptions } from './IGridsterOptions';\n\nexport class GridsterOptions {\n    direction: string;\n    lanes: number;\n    widthHeightRatio: number;\n    heightToFontSizeRatio: number;\n    responsiveView: boolean;\n    responsiveSizes: boolean;\n    responsiveToParent: boolean;\n    dragAndDrop: boolean;\n    resizable: boolean;\n    shrink: boolean;\n    minWidth: number;\n    useCSSTransforms: boolean;\n\n    defaults: IGridsterOptions = {\n        lanes: 5,\n        direction: 'horizontal',\n        widthHeightRatio: 1,\n        shrink: false,\n        responsiveView: true,\n        responsiveSizes: false,\n        responsiveToParent: false,\n        dragAndDrop: true,\n        resizable: false,\n        useCSSTransforms: false,\n        floating: true,\n        tolerance: 'pointer'\n    };\n\n    change: Observable<IGridsterOptions>;\n\n    responsiveOptions: Array<IGridsterOptions> = [];\n    basicOptions: IGridsterOptions;\n\n    breakpointsMap = {\n        sm: 576, // Small devices\n        md: 768, // Medium devices\n        lg: 992, // Large devices\n        xl: 1200 // Extra large\n    };\n\n    constructor(config: IGridsterOptions, gridsterElement: HTMLElement) {\n        const responsiveContainer = config.responsiveToParent ? gridsterElement : window;\n\n        this.basicOptions = config;\n        this.responsiveOptions = this.extendResponsiveOptions(config.responsiveOptions || []);\n\n        this.change = merge(\n                of(this.getOptionsByWidth(this.getElementWidth(responsiveContainer))),\n                fromEvent(window, 'resize').pipe(\n                    debounceTime(config.responsiveDebounce || 0),\n                    map((event: Event) => this.getOptionsByWidth(this.getElementWidth(responsiveContainer)))\n                )\n            ).pipe(distinctUntilChanged(null, (options: any) => options.minWidth));\n    }\n\n    getOptionsByWidth(width: number): IGridsterOptions {\n        let i = 0;\n        let options: IGridsterOptions = Object.assign({}, this.defaults, this.basicOptions);\n\n        while (this.responsiveOptions[i]) {\n            if (this.responsiveOptions[i].minWidth <= width) {\n                options = this.responsiveOptions[i];\n            }\n            i++;\n        }\n\n        return options;\n    }\n\n    private extendResponsiveOptions(responsiveOptions: Array<IGridsterOptions>): Array<IGridsterOptions> {\n        return responsiveOptions\n            // responsive options are valid only with \"breakpoint\" property\n            .filter(options => options.breakpoint)\n            // set default minWidth if not given\n            .map((options) => {\n                return Object.assign({\n                    minWidth: this.breakpointsMap[options.breakpoint] || 0\n                }, options);\n            })\n            .sort((curr, next) => curr.minWidth - next.minWidth)\n            .map((options) => <IGridsterOptions>Object.assign({}, this.defaults, this.basicOptions, options));\n    }\n\n    private getElementWidth($element: any) {\n        if ($element === window) {\n            return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        }\n\n        return $element.clientWidth;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { takeUntil, switchMap, map, scan, filter, share, tap } from 'rxjs/operators';\n\nimport { GridsterService } from '../gridster.service';\nimport { GridsterItemPrototypeDirective } from './gridster-item-prototype.directive';\nimport { utils } from '../utils/utils';\nimport { DraggableEvent } from '../utils/DraggableEvent';\n\n@Injectable()\nexport class GridsterPrototypeService {\n\n    private isDragging = false;\n\n    private dragSubject = new Subject<any>();\n\n    private dragStartSubject = new Subject<any>();\n\n    private dragStopSubject = new Subject<any>();\n\n    constructor() {}\n\n    observeDropOver (gridster: GridsterService) {\n        return this.dragStopSubject.pipe(\n            filter((data) => {\n                const gridsterEl = gridster.gridsterComponent.$element;\n                const isOverNestedGridster = [].slice.call(gridsterEl.querySelectorAll('gridster'))\n                    .reduce((isOverGridster, nestedGridsterEl) => {\n                        return isOverGridster ||\n                            this.isOverGridster(data.item, nestedGridsterEl, data.event, gridster.options);\n                    }, false);\n\n                if (isOverNestedGridster) {\n                    return false;\n                }\n\n                return this.isOverGridster(data.item, gridsterEl, data.event, gridster.options);\n            }),\n            tap((data) => {\n                // TODO: what we should provide as a param?\n                // prototype.drop.emit({item: prototype.item});\n                data.item.onDrop(gridster);\n            })\n        );\n    }\n\n    observeDropOut (gridster: GridsterService) {\n        return this.dragStopSubject.pipe(\n            filter((data) => {\n                const gridsterEl = gridster.gridsterComponent.$element;\n\n                return !this.isOverGridster(data.item, gridsterEl, data.event, gridster.options);\n            }),\n            tap((data) => {\n                // TODO: what we should provide as a param?\n                data.item.onCancel();\n            })\n        );\n    }\n\n    observeDragOver(gridster: GridsterService): {\n        dragOver: Observable<GridsterItemPrototypeDirective>,\n        dragEnter: Observable<GridsterItemPrototypeDirective>,\n        dragOut: Observable<GridsterItemPrototypeDirective>\n    } {\n        const over = this.dragSubject.pipe(\n            map((data) => {\n                const gridsterEl = gridster.gridsterComponent.$element;\n\n                return {\n                  item: data.item,\n                  event: data.event,\n                  isOver: this.isOverGridster(data.item, gridsterEl, data.event, gridster.options),\n                  isDrop: false\n                };\n            })\n        );\n\n        const drop = this.dragStopSubject.pipe(\n            map((data) => {\n                const gridsterEl = gridster.gridsterComponent.$element;\n\n                return {\n                    item: data.item,\n                    event: data.event,\n                    isOver: this.isOverGridster(data.item, gridsterEl, data.event, gridster.options),\n                    isDrop: true\n                };\n            })\n        );\n\n        const dragExt = merge(\n                // dragStartSubject is connected in case when item prototype is placed above gridster\n                // and drag enter is not fired\n                this.dragStartSubject.pipe(map(() => ({ item: null, isOver: false, isDrop: false }))),\n                over,\n                drop\n            ).pipe(\n                scan((prev: any, next: any) => {\n                    return {\n                        item: next.item,\n                        event: next.event,\n                        isOver: next.isOver,\n                        isEnter: prev.isOver === false && next.isOver === true,\n                        isOut: prev.isOver === true && next.isOver === false && !prev.isDrop,\n                        isDrop: next.isDrop\n                    };\n                }),\n                filter((data: any) => {\n                    return !data.isDrop;\n                }),\n                share()\n            );\n\n        const dragEnter = this.createDragEnterObservable(dragExt, gridster);\n        const dragOut = this.createDragOutObservable(dragExt, gridster);\n        const dragOver = dragEnter\n            .pipe(\n                switchMap(() => this.dragSubject.pipe(takeUntil(dragOut))),\n                map((data: any) => data.item)\n            );\n\n        return { dragEnter, dragOut, dragOver };\n    }\n\n    dragItemStart(item: GridsterItemPrototypeDirective, event: DraggableEvent) {\n        this.isDragging = true;\n        this.dragStartSubject.next({ item, event });\n    }\n\n    dragItemStop(item: GridsterItemPrototypeDirective, event: DraggableEvent) {\n        this.isDragging = false;\n        this.dragStopSubject.next({ item, event });\n    }\n\n    updatePrototypePosition(item: GridsterItemPrototypeDirective, event: DraggableEvent) {\n        this.dragSubject.next({ item, event });\n    }\n\n    /**\n     * Creates observable that is fired on dragging over gridster container.\n     */\n    private createDragOverObservable (\n        dragIsOver: Observable<{item: GridsterItemPrototypeDirective, isOver: boolean}>,\n        gridster: GridsterService\n    ) {\n        return dragIsOver.pipe(\n            filter((data: any) => data.isOver && !data.isEnter && !data.isOut),\n            map((data: any): GridsterItemPrototypeDirective => data.item),\n            tap((item) => item.onOver(gridster))\n        );\n    }\n    /**\n     * Creates observable that is fired on drag enter gridster container.\n     */\n    private createDragEnterObservable (\n        dragIsOver: Observable<{item: GridsterItemPrototypeDirective, isOver: boolean}>,\n        gridster: GridsterService\n    ) {\n        return dragIsOver.pipe(\n            filter((data: any) => data.isEnter),\n            map((data: any): GridsterItemPrototypeDirective => data.item),\n            tap((item) => item.onEnter(gridster))\n        );\n    }\n    /**\n     * Creates observable that is fired on drag out gridster container.\n     */\n    private createDragOutObservable (\n        dragIsOver: Observable<{item: GridsterItemPrototypeDirective,\n        isOver: boolean}>,\n        gridster: GridsterService\n    ) {\n        return dragIsOver.pipe(\n            filter((data: any) => data.isOut),\n            map((data: any): GridsterItemPrototypeDirective => data.item),\n            tap((item) => item.onOut(gridster))\n        );\n    }\n\n    /**\n     * Checks whether \"element\" position fits inside \"containerEl\" position.\n     * It checks if \"element\" is totally covered by \"containerEl\" area.\n     */\n    private isOverGridster(item: GridsterItemPrototypeDirective, gridsterEl: HTMLElement, event, options): boolean {\n        const el = item.$element;\n        const parentItem = <HTMLElement>gridsterEl.parentElement &&\n            <HTMLElement>gridsterEl.parentElement.closest('gridster-item');\n\n        if (parentItem) {\n            return this.isOverGridster(item, parentItem, event, options);\n        }\n\n        switch (options.tolerance) {\n            case 'fit':\n                return utils.isElementFitContainer(el, gridsterEl);\n            case 'intersect':\n                return utils.isElementIntersectContainer(el, gridsterEl);\n            case 'touch':\n                return utils.isElementTouchContainer(el, gridsterEl);\n            default:\n                return utils.isCursorAboveElement(event, gridsterEl);\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    ElementRef,\n    ViewChild,\n    NgZone,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    HostBinding,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    Observable,\n    Subscription,\n    fromEvent,\n    ConnectableObservable\n} from 'rxjs';\nimport { debounceTime, filter, publish } from 'rxjs/operators';\n\nimport { utils } from './utils/utils';\nimport { GridsterService } from './gridster.service';\nimport { IGridsterOptions } from './IGridsterOptions';\nimport { IGridsterDraggableOptions } from './IGridsterDraggableOptions';\nimport { GridsterPrototypeService } from './gridster-prototype/gridster-prototype.service';\nimport { GridsterItemPrototypeDirective } from './gridster-prototype/gridster-item-prototype.directive';\nimport { GridListItem } from './gridList/GridListItem';\nimport { GridsterOptions } from './GridsterOptions';\n\n@Component({\n    selector: 'ngx-gridster',\n    template: `<div class=\"gridster-container\">\n      <ng-content></ng-content>\n      <div class=\"position-highlight\" style=\"display:none;\" #positionHighlight>\n        <div class=\"inner\"></div>\n      </div>\n    </div>`,\n    styles: [\n        `\n            ngx-gridster {\n                position: relative;\n                display: block;\n                left: 0;\n                width: 100%;\n            }\n\n            ngx-gridster.gridster--dragging {\n                -moz-user-select: none;\n                -khtml-user-select: none;\n                -webkit-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n            }\n\n            ngx-gridster .gridster-container {\n                position: relative;\n                width: 100%;\n                list-style: none;\n                -webkit-transition: width 0.2s, height 0.2s;\n                transition: width 0.2s, height 0.2s;\n            }\n\n            ngx-gridster .position-highlight {\n                display: block;\n                position: absolute;\n                z-index: 1;\n            }\n        `\n    ],\n    providers: [GridsterService],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, AfterContentInit, OnDestroy {\n    @Input() options: IGridsterOptions;\n    @Output() optionsChange = new EventEmitter<any>();\n    @Output() ready = new EventEmitter<any>();\n    @Output() reflow = new EventEmitter<any>();\n    @Output() prototypeDrop = new EventEmitter<{ item: GridListItem }>();\n    @Output() prototypeEnter = new EventEmitter<{ item: GridListItem }>();\n    @Output() prototypeOut = new EventEmitter<{ item: GridListItem }>();\n    @Input() draggableOptions: IGridsterDraggableOptions = {};\n    @Input() parent: GridsterComponent;\n\n    @ViewChild('positionHighlight', { static: true }) $positionHighlight;\n    @HostBinding('class.gridster--dragging') isDragging = false;\n    @HostBinding('class.gridster--resizing') isResizing = false;\n\n    @HostBinding('class.gridster--ready') isReady = false;\n    gridster: GridsterService;\n    $element: HTMLElement;\n\n    gridsterOptions: GridsterOptions;\n    isPrototypeEntered = false;\n    private isDisabled = false;\n    private subscription = new Subscription();\n\n    constructor(\n        private zone: NgZone,\n        elementRef: ElementRef,\n        gridster: GridsterService,\n        private gridsterPrototype: GridsterPrototypeService\n    ) {\n        this.gridster = gridster;\n        this.$element = elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        this.gridsterOptions = new GridsterOptions(this.options, this.$element);\n\n        if (this.options.useCSSTransforms) {\n            this.$element.classList.add('css-transform');\n        }\n\n        this.subscription.add(\n            this.gridsterOptions.change.subscribe(options => {\n                this.gridster.options = options;\n                if (this.gridster.gridList) {\n                    this.gridster.gridList.options = options;\n                }\n                setTimeout(() => this.optionsChange.emit(options));\n            })\n        );\n\n        this.gridster.init(this);\n\n        this.subscription.add(\n            fromEvent(window, 'resize')\n                .pipe(\n                    debounceTime(this.gridster.options.responsiveDebounce || 0),\n                    filter(() => this.gridster.options.responsiveView)\n                )\n                .subscribe(() => this.reload())\n        );\n\n        this.zone.runOutsideAngular(() => {\n            this.subscription.add(\n                fromEvent(document, 'scroll', { passive: true }).subscribe(() =>\n                    this.updateGridsterElementData()\n                )\n            );\n            const scrollableContainer = utils.getScrollableContainer(this.$element);\n            if (scrollableContainer) {\n                this.subscription.add(\n                    fromEvent(scrollableContainer, 'scroll', { passive: true })\n                    .subscribe(() =>\n                        this.updateGridsterElementData()\n                    )\n                );\n            }\n        });\n    }\n\n    ngAfterContentInit() {\n        this.gridster.start();\n\n        this.updateGridsterElementData();\n\n        this.connectGridsterPrototype();\n\n        this.gridster.$positionHighlight = this.$positionHighlight.nativeElement;\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    /**\n     * Change gridster config option and rebuild\n     * @param string name\n     * @param any value\n     * @return GridsterComponent\n     */\n    setOption(name: string, value: any) {\n        if (name === 'dragAndDrop') {\n            if (value) {\n                this.enableDraggable();\n            } else {\n                this.disableDraggable();\n            }\n        }\n        if (name === 'resizable') {\n            if (value) {\n                this.enableResizable();\n            } else {\n                this.disableResizable();\n            }\n        }\n        if (name === 'lanes') {\n            this.gridster.options.lanes = value;\n\n            this.gridster.gridList.fixItemsPositions(this.gridster.options);\n            this.reflowGridster();\n        }\n        if (name === 'direction') {\n            this.gridster.options.direction = value;\n            this.gridster.gridList.pullItemsToLeft();\n        }\n        if (name === 'widthHeightRatio') {\n            this.gridster.options.widthHeightRatio = parseFloat(value || 1);\n        }\n        if (name === 'responsiveView') {\n            this.gridster.options.responsiveView = !!value;\n        }\n        this.gridster.gridList.setOption(name, value);\n\n        return this;\n    }\n\n    reload() {\n        setTimeout(() => {\n            this.gridster.fixItemsPositions();\n            this.reflowGridster();\n        });\n\n        return this;\n    }\n\n    reflowGridster(isInit = false) {\n        this.gridster.reflow();\n        this.reflow.emit({\n            isInit: isInit,\n            gridsterComponent: this\n        });\n    }\n\n    updateGridsterElementData() {\n        this.gridster.gridsterScrollData = this.getScrollPositionFromParents(\n            this.$element\n        );\n        this.gridster.gridsterRect = this.$element.getBoundingClientRect();\n    }\n\n    setReady() {\n        setTimeout(() => (this.isReady = true));\n        this.ready.emit();\n    }\n\n    adjustItemsHeightToContent(\n        scrollableItemElementSelector: string = '.gridster-item-inner'\n    ) {\n        this.gridster.items\n            // convert each item to object with information about content height and scroll height\n            .map((item: GridListItem) => {\n                const scrollEl = item.$element.querySelector(\n                    scrollableItemElementSelector\n                );\n                const contentEl = scrollEl.lastElementChild;\n                const scrollElDistance = utils.getRelativeCoordinates(\n                    scrollEl,\n                    item.$element\n                );\n                const scrollElRect = scrollEl.getBoundingClientRect();\n                const contentRect = contentEl.getBoundingClientRect();\n\n                return {\n                    item,\n                    contentHeight: contentRect.bottom - scrollElRect.top,\n                    scrollElDistance\n                };\n            })\n            // calculate required height in lanes amount and update item \"h\"\n            .forEach(data => {\n                data.item.h = Math.ceil(<any>(\n                    (data.contentHeight /\n                        (this.gridster.cellHeight - data.scrollElDistance.top))\n                ));\n            });\n\n        this.gridster.fixItemsPositions();\n        this.gridster.reflow();\n    }\n\n    disable(item) {\n        const itemIdx = this.gridster.items.indexOf(item.itemComponent);\n\n        this.isDisabled = true;\n        if (itemIdx >= 0) {\n            delete this.gridster.items[\n                this.gridster.items.indexOf(item.itemComponent)\n            ];\n        }\n        this.gridster.onDragOut(item);\n    }\n\n    enable() {\n        this.isDisabled = false;\n    }\n\n    private getScrollPositionFromParents(\n        element: Element,\n        data = { scrollTop: 0, scrollLeft: 0 }\n    ): { scrollTop: number; scrollLeft: number } {\n        if (element.parentElement && element.parentElement !== document.body) {\n            data.scrollTop += element.parentElement.scrollTop;\n            data.scrollLeft += element.parentElement.scrollLeft;\n\n            return this.getScrollPositionFromParents(\n                element.parentElement,\n                data\n            );\n        }\n\n        return {\n            scrollTop: data.scrollTop,\n            scrollLeft: data.scrollLeft\n        };\n    }\n\n    /**\n     * Connect gridster prototype item to gridster dragging hooks (onStart, onDrag, onStop).\n     */\n    private connectGridsterPrototype() {\n        this.gridsterPrototype.observeDropOut(this.gridster).subscribe();\n\n        const dropOverObservable = <ConnectableObservable<any>>(\n            this.gridsterPrototype\n                .observeDropOver(this.gridster)\n                .pipe(publish())\n        );\n\n        const dragObservable = this.gridsterPrototype.observeDragOver(\n            this.gridster\n        );\n\n        dragObservable.dragOver\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype: GridsterItemPrototypeDirective) => {\n                if (!this.isPrototypeEntered) {\n                    return;\n                }\n                this.gridster.onDrag(prototype.item);\n            });\n\n        dragObservable.dragEnter\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype: GridsterItemPrototypeDirective) => {\n                this.isPrototypeEntered = true;\n\n                if (this.gridster.items.indexOf(prototype.item) < 0) {\n                    this.gridster.items.push(prototype.item);\n                }\n                this.gridster.onStart(prototype.item);\n                prototype.setDragContextGridster(this.gridster);\n\n                if (this.parent) {\n                    this.parent.disable(prototype.item);\n                }\n                this.prototypeEnter.emit({ item: prototype.item });\n            });\n\n        dragObservable.dragOut\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe((prototype: GridsterItemPrototypeDirective) => {\n                if (!this.isPrototypeEntered) {\n                    return;\n                }\n                this.gridster.onDragOut(prototype.item);\n                this.isPrototypeEntered = false;\n\n                this.prototypeOut.emit({ item: prototype.item });\n\n                if (this.parent) {\n                    this.parent.enable();\n\n                    this.parent.isPrototypeEntered = true;\n                    if (\n                        this.parent.gridster.items.indexOf(prototype.item) < 0\n                    ) {\n                        this.parent.gridster.items.push(prototype.item);\n                    }\n                    this.parent.gridster.onStart(prototype.item);\n                    prototype.setDragContextGridster(this.parent.gridster);\n                    // timeout is needed to be sure that \"enter\" event is fired after \"out\"\n                    setTimeout(() => {\n                        this.parent.prototypeEnter.emit({\n                            item: prototype.item\n                        });\n                        prototype.onEnter(this.parent.gridster);\n                    });\n                }\n            });\n\n        dropOverObservable\n            .pipe(filter(() => !this.isDisabled))\n            .subscribe(data => {\n                if (!this.isPrototypeEntered) {\n                    return;\n                }\n\n                this.gridster.onStop(data.item.item);\n                this.gridster.removeItem(data.item.item);\n\n                this.isPrototypeEntered = false;\n                if (this.parent) {\n                    this.parent.enable();\n                }\n                this.prototypeDrop.emit({ item: data.item.item });\n            });\n\n        dropOverObservable.connect();\n    }\n\n    private enableDraggable() {\n        this.gridster.options.dragAndDrop = true;\n\n        this.gridster.items\n            .filter(\n                item => item.itemComponent && item.itemComponent.dragAndDrop\n            )\n            .forEach((item: GridListItem) =>\n                item.itemComponent.enableDragDrop()\n            );\n    }\n\n    private disableDraggable() {\n        this.gridster.options.dragAndDrop = false;\n\n        this.gridster.items\n            .filter(item => item.itemComponent)\n            .forEach((item: GridListItem) =>\n                item.itemComponent.disableDraggable()\n            );\n    }\n\n    private enableResizable() {\n        this.gridster.options.resizable = true;\n\n        this.gridster.items\n            .filter(item => item.itemComponent && item.itemComponent.resizable)\n            .forEach((item: GridListItem) =>\n                item.itemComponent.enableResizable()\n            );\n    }\n\n    private disableResizable() {\n        this.gridster.options.resizable = false;\n\n        this.gridster.items.forEach((item: GridListItem) =>\n            item.itemComponent.disableResizable()\n        );\n    }\n}\n","import { GridsterItemComponent } from '../gridster-item/gridster-item.component';\nimport { GridsterItemPrototypeDirective } from '../gridster-prototype/gridster-item-prototype.directive';\nimport { GridsterService } from '../gridster.service';\n\nexport class GridListItem {\n    static BREAKPOINTS: Array<string> = ['sm', 'md', 'lg', 'xl'];\n    static X_PROPERTY_MAP: any = {\n        sm: 'xSm',\n        md: 'xMd',\n        lg: 'xLg',\n        xl: 'xXl'\n    };\n\n    static Y_PROPERTY_MAP: any = {\n        sm: 'ySm',\n        md: 'yMd',\n        lg: 'yLg',\n        xl: 'yXl'\n    };\n\n    static W_PROPERTY_MAP: any = {\n        sm: 'wSm',\n        md: 'wMd',\n        lg: 'wLg',\n        xl: 'wXl'\n    };\n\n    static H_PROPERTY_MAP: any = {\n        sm: 'hSm',\n        md: 'hMd',\n        lg: 'hLg',\n        xl: 'hXl'\n    };\n\n    itemComponent: GridsterItemComponent;\n    itemPrototype: GridsterItemPrototypeDirective;\n    itemObject: any;\n\n    get $element () {\n        return this.getItem().$element;\n    }\n\n    get x () {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        return this.getValueX(breakpoint);\n    }\n    set x (value: number) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        this.setValueX(value, breakpoint);\n    }\n\n    get y () {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        return this.getValueY(breakpoint);\n    }\n    set y (value: number) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        this.setValueY(value, breakpoint);\n    }\n\n    get w () {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        return this.getValueW(breakpoint);\n    }\n    set w (value: number) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        this.setValueW(value, breakpoint);\n    }\n\n    get h () {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        return this.getValueH(breakpoint);\n    }\n    set h (value: number) {\n        const item = this.getItem();\n        const breakpoint = item.gridster ? item.gridster.options.breakpoint : null;\n\n        this.setValueH(value, breakpoint);\n    }\n\n    get autoSize () {\n        return this.getItem().autoSize;\n    }\n    set autoSize (value: boolean) {\n        this.getItem().autoSize = value;\n    }\n\n    get dragAndDrop() {\n        return !!this.getItem().dragAndDrop;\n    }\n\n    get resizable() {\n        return !!this.getItem().resizable;\n    }\n\n    get positionX() {\n        const item = this.itemComponent || this.itemPrototype;\n\n        if (!item) {\n            return null;\n        }\n\n        return item.positionX;\n    }\n\n    get positionY() {\n        const item = this.itemComponent || this.itemPrototype;\n\n        if (!item) {\n            return null;\n        }\n\n        return item.positionY;\n    }\n\n    public setFromGridsterItem (item: GridsterItemComponent): GridListItem {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemComponent = item;\n        return this;\n    }\n\n    public setFromGridsterItemPrototype (item: GridsterItemPrototypeDirective): GridListItem {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemPrototype = item;\n        return this;\n    }\n\n    public setFromObjectLiteral (item: Object): GridListItem {\n        if (this.isItemSet()) {\n            throw new Error('GridListItem is already set.');\n        }\n        this.itemObject = item;\n        return this;\n    }\n\n    public copy() {\n        const itemCopy = new GridListItem();\n\n        return itemCopy.setFromObjectLiteral({\n            $element: this.$element,\n            x: this.x,\n            y: this.y,\n            w: this.w,\n            h: this.h,\n            autoSize: this.autoSize,\n            dragAndDrop: this.dragAndDrop,\n            resizable: this.resizable\n        });\n    }\n\n    public copyForBreakpoint(breakpoint?) {\n        const itemCopy = new GridListItem();\n\n        return itemCopy.setFromObjectLiteral({\n            $element: this.$element,\n            x: this.getValueX(breakpoint),\n            y: this.getValueY(breakpoint),\n            w: this.getValueW(breakpoint),\n            h: this.getValueH(breakpoint),\n            autoSize: this.autoSize,\n            dragAndDrop: this.dragAndDrop,\n            resizable: this.resizable\n        });\n    }\n\n    public getValueX(breakpoint?) {\n        const item = this.getItem();\n\n        return item[this.getXProperty(breakpoint)];\n    }\n\n    public getValueY(breakpoint?) {\n        const item = this.getItem();\n\n        return item[this.getYProperty(breakpoint)];\n    }\n\n    public getValueW(breakpoint?) {\n        const item = this.getItem();\n\n        return item[this.getWProperty(breakpoint)] || 1;\n    }\n\n    public getValueH(breakpoint?) {\n        const item = this.getItem();\n\n        return item[this.getHProperty(breakpoint)] || 1;\n    }\n\n    public setValueX(value: number, breakpoint?) {\n        const item = this.getItem();\n\n        item[this.getXProperty(breakpoint)] = value;\n    }\n\n    public setValueY(value: number, breakpoint?) {\n        const item = this.getItem();\n\n        item[this.getYProperty(breakpoint)] = value;\n    }\n\n    public setValueW(value: number, breakpoint?) {\n        const item = this.getItem();\n\n        item[this.getWProperty(breakpoint)] = value;\n    }\n\n    public setValueH(value: number, breakpoint?) {\n        const item = this.getItem();\n\n        item[this.getHProperty(breakpoint)] = value;\n    }\n\n    public triggerChangeX(breakpoint?) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getXProperty(breakpoint) + 'Change'].emit(this.getValueX(breakpoint));\n        }\n    }\n\n    public triggerChangeY(breakpoint?) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getYProperty(breakpoint) + 'Change'].emit(this.getValueY(breakpoint));\n        }\n    }\n\n    public triggerChangeW(breakpoint?) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getWProperty(breakpoint) + 'Change'].emit(this.getValueW(breakpoint));\n        }\n    }\n\n    public triggerChangeH(breakpoint?) {\n        const item = this.itemComponent;\n        if (item) {\n            item[this.getHProperty(breakpoint) + 'Change'].emit(this.getValueH(breakpoint));\n        }\n    }\n\n    public hasPositions(breakpoint?) {\n        const x = this.getValueX(breakpoint);\n        const y = this.getValueY(breakpoint);\n\n        return (x || x === 0) && (y || y === 0);\n    }\n\n    public applyPosition(gridster?: GridsterService) {\n        const position = this.calculatePosition(gridster);\n\n        this.itemComponent.positionX = position.left;\n        this.itemComponent.positionY = position.top;\n        this.itemComponent.updateElemenetPosition();\n    }\n\n    public calculatePosition(gridster?: GridsterService): {left: number, top: number} {\n        if (!gridster && !this.itemComponent) {\n            return {left: 0, top: 0};\n        }\n        gridster = gridster || this.itemComponent.gridster;\n\n        return {\n            left: this.x * gridster.cellWidth,\n            top: this.y * gridster.cellHeight\n        };\n    }\n\n    public applySize(gridster?: GridsterService): void {\n        const size = this.calculateSize(gridster);\n\n        this.$element.style.width = size.width + 'px';\n        this.$element.style.height = size.height + 'px';\n    }\n\n    public calculateSize(gridster?: GridsterService): {width: number, height: number} {\n        if (!gridster && !this.itemComponent) {\n            return {width: 0, height: 0};\n        }\n        gridster = gridster || this.itemComponent.gridster;\n\n        let width = this.getValueW(gridster.options.breakpoint);\n        let height = this.getValueH(gridster.options.breakpoint);\n\n        if (gridster.options.direction === 'vertical') {\n            width = Math.min(width, gridster.options.lanes);\n        }\n        if (gridster.options.direction === 'horizontal') {\n            height = Math.min(height, gridster.options.lanes);\n        }\n\n        return {\n            width: width * gridster.cellWidth,\n            height: height * gridster.cellHeight\n        };\n    }\n\n    private getXProperty(breakpoint?: string) {\n\n        if (breakpoint && this.itemComponent) {\n            return GridListItem.X_PROPERTY_MAP[breakpoint];\n        } else {\n            return 'x';\n        }\n    }\n\n    private getYProperty(breakpoint?: string) {\n\n        if (breakpoint && this.itemComponent) {\n            return GridListItem.Y_PROPERTY_MAP[breakpoint];\n        } else {\n            return 'y';\n        }\n    }\n\n    private getWProperty(breakpoint?: string) {\n        if (this.itemPrototype) {\n            return this.itemPrototype[GridListItem.W_PROPERTY_MAP[breakpoint]] ?\n                GridListItem.W_PROPERTY_MAP[breakpoint] : 'w';\n        }\n\n        const item = this.getItem();\n        const responsiveSizes = item.gridster && item.gridster.options.responsiveSizes;\n\n        if (breakpoint && responsiveSizes) {\n            return GridListItem.W_PROPERTY_MAP[breakpoint];\n        } else {\n            return 'w';\n        }\n    }\n\n    private getHProperty(breakpoint?: string) {\n        if (this.itemPrototype) {\n            return this.itemPrototype[GridListItem.H_PROPERTY_MAP[breakpoint]] ?\n                GridListItem.H_PROPERTY_MAP[breakpoint] : 'h';\n        }\n\n        const item = this.getItem();\n        const responsiveSizes = item.gridster && item.gridster.options.responsiveSizes;\n\n        if (breakpoint && responsiveSizes) {\n            return GridListItem.H_PROPERTY_MAP[breakpoint];\n        } else {\n            return 'h';\n        }\n    }\n\n    private getItem(): any {\n        const item = this.itemComponent || this.itemPrototype || this.itemObject;\n\n        if (!item) {\n            throw new Error('GridListItem is not set.');\n        }\n        return item;\n    }\n\n    private isItemSet() {\n        return this.itemComponent || this.itemPrototype || this.itemObject;\n    }\n}\n","export class DraggableEvent {\n    clientX: number;\n\n    clientY: number;\n\n    pageX: number;\n\n    pageY: number;\n\n    target: any;\n\n    type: string;\n\n\n    private touchEvent: TouchEvent;\n\n    private mouseEvent: MouseEvent;\n\n    constructor(event: any) {\n        if (event.touches) {\n            this.touchEvent = (<TouchEvent>event);\n            this.setDataFromTouchEvent(this.touchEvent);\n        } else {\n            this.mouseEvent = (<MouseEvent>event);\n            this.setDataFromMouseEvent(this.mouseEvent);\n        }\n    }\n\n    isTouchEvent(): boolean {\n        return !!this.touchEvent;\n    }\n\n    pauseEvent() {\n        const event: Event = this.touchEvent || this.mouseEvent;\n\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        event.cancelBubble = true;\n        event.returnValue = false;\n        return false;\n    }\n\n    getRelativeCoordinates(container: HTMLElement): {x: number, y: number} {\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\n        const rect = container.getBoundingClientRect();\n\n        return {\n            x: this.pageX - rect.left - scrollLeft,\n            y: this.pageY - rect.top - scrollTop,\n        };\n    }\n\n    private setDataFromMouseEvent(event: MouseEvent): void {\n        this.target = event.target;\n        this.clientX = event.clientX;\n        this.clientY = event.clientY;\n        this.pageX = event.pageX;\n        this.pageY = event.pageY;\n        this.type = event.type;\n    }\n\n    private setDataFromTouchEvent(event: TouchEvent): void {\n        const touch = event.touches[0] || event.changedTouches[0];\n\n        this.target = event.target;\n        this.clientX = touch.clientX;\n        this.clientY = touch.clientY;\n        this.pageX = touch.pageX;\n        this.pageY = touch.pageY;\n        this.type = event.type;\n\n    }\n}\n","import { Observable, fromEvent, merge, pipe } from 'rxjs';\nimport { share, map, filter, tap, switchMap, takeUntil, take, skip } from 'rxjs/operators';\n\nimport { DraggableEvent } from './DraggableEvent';\nimport { utils } from './utils';\n\nexport class Draggable {\n    static SCROLL_SPEED = 20;\n    element: Element;\n\n    dragStart: Observable<DraggableEvent>;\n    dragMove: Observable<DraggableEvent>;\n    dragStop: Observable<DraggableEvent>;\n    // A simple requestAnimationFrame polyfill\n    private requestAnimationFrame: Function;\n    private cancelAnimationFrame: Function;\n    private mousemove: Observable<{} | Event> = merge(\n        fromEvent(document, 'mousemove'),\n        fromEvent(document, 'touchmove', { passive: false })\n    ).pipe(share());\n    private mouseup: Observable<{} | Event> = merge(\n        fromEvent(document, 'mouseup'),\n        fromEvent(document, 'touchend'),\n        fromEvent(document, 'touchcancel')\n    ).pipe(share());\n    private mousedown: Observable<{} | Event>;\n    private config = {\n        handlerClass: null,\n        scroll: true,\n        scrollEdge: 36,\n        scrollDirection: null\n    };\n    // reference to auto scrolling listeners\n    private autoScrollingInterval = [];\n\n    constructor(element: Element, config = {}) {\n        this.element = element;\n        this.mousedown = merge(\n            fromEvent(element, 'mousedown'),\n            fromEvent(element, 'touchstart')\n        ).pipe(share());\n\n        this.config = { ...this.config, ...config };\n\n        this.dragStart = this.createDragStartObservable().pipe(share());\n        this.dragMove = this.createDragMoveObservable(this.dragStart);\n        this.dragStop = this.createDragStopObservable(this.dragStart);\n\n        this.fixProblemWithDnDForIE(element);\n\n        this.requestAnimationFrame =\n            window.requestAnimationFrame || (callback => setTimeout(callback, 1000 / 60));\n        this.cancelAnimationFrame = window.cancelAnimationFrame || (cafID => clearTimeout(cafID));\n    }\n\n    private createDragStartObservable(): Observable<DraggableEvent> {\n        return this.mousedown.pipe(\n            map(md => new DraggableEvent(md)),\n            filter((event: DraggableEvent) => this.isDragingByHandler(event)),\n            tap(e => {\n                if (!e.isTouchEvent()) {\n                    e.pauseEvent();\n                }\n                if (document.activeElement) {\n                    (<any>document.activeElement).blur();\n                }\n                // prevents rendering performance issues while dragging item with selection inside\n                utils.clearSelection();\n            }),\n            switchMap((startEvent: DraggableEvent) => {\n                return this.mousemove.pipe(\n                    map(mm => new DraggableEvent(mm)),\n                    filter((moveEvent: DraggableEvent) => this.inRange(startEvent, moveEvent, 5)),\n                    map(() => startEvent),\n                    takeUntil(this.mouseup),\n                    take(1)\n                );\n            })\n        );\n    }\n\n    private createDragMoveObservable(\n        dragStart: Observable<DraggableEvent>\n    ): Observable<DraggableEvent> {\n        return dragStart.pipe(\n            tap(event => {\n                this.addTouchActionNone(event.target);\n            }),\n            switchMap(startEvent => {\n                return this.mousemove.pipe(\n                    skip(1),\n                    map(mm => new DraggableEvent(mm)),\n                    tap(event => {\n                        event.pauseEvent();\n                        startEvent.pauseEvent();\n                    }),\n                    takeUntil(this.mouseup)\n                );\n            }),\n            filter(val => !!val),\n            tap((event: DraggableEvent) => {\n                if (this.config.scroll) {\n                    this.startScroll(this.element, event);\n                }\n            })\n        );\n    }\n\n    private createDragStopObservable(dragStart: Observable<DraggableEvent>): Observable<any> {\n        return dragStart.pipe(\n            switchMap(() => {\n                return this.mouseup.pipe(take(1));\n            }),\n            map(e => new DraggableEvent(e)),\n            tap(e => {\n                if (e.target) {\n                    this.removeTouchActionNone(e.target);\n                }\n                this.autoScrollingInterval.forEach(raf => this.cancelAnimationFrame(raf));\n            })\n        );\n    }\n\n    private startScroll(item: Element, event: DraggableEvent) {\n        const scrollContainer = this.getScrollContainer(item);\n        this.autoScrollingInterval.forEach(raf => this.cancelAnimationFrame(raf));\n\n        if (scrollContainer) {\n            this.startScrollForContainer(event, scrollContainer);\n        } else {\n            this.startScrollForWindow(event);\n        }\n    }\n\n    private startScrollForContainer(event: DraggableEvent, scrollContainer: HTMLElement): void {\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'vertical') {\n            this.startScrollVerticallyForContainer(event, scrollContainer);\n        }\n\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'horizontal') {\n            this.startScrollHorizontallyForContainer(event, scrollContainer);\n        }\n    }\n\n    private startScrollVerticallyForContainer(\n        event: DraggableEvent,\n        scrollContainer: HTMLElement\n    ): void {\n        if (event.pageY - this.getOffset(scrollContainer).top < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, -Draggable.SCROLL_SPEED, 'scrollTop');\n        } else if (\n            this.getOffset(scrollContainer).top +\n                scrollContainer.getBoundingClientRect().height -\n                event.pageY <\n            this.config.scrollEdge\n        ) {\n            this.startAutoScrolling(scrollContainer, Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n    }\n\n    private startScrollHorizontallyForContainer(\n        event: DraggableEvent,\n        scrollContainer: HTMLElement\n    ): void {\n        if (event.pageX - scrollContainer.getBoundingClientRect().left < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollContainer, -Draggable.SCROLL_SPEED, 'scrollLeft');\n        } else if (\n            this.getOffset(scrollContainer).left +\n                scrollContainer.getBoundingClientRect().width -\n                event.pageX <\n            this.config.scrollEdge\n        ) {\n            this.startAutoScrolling(scrollContainer, Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n    }\n\n    private startScrollForWindow(event) {\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'vertical') {\n            this.startScrollVerticallyForWindow(event);\n        }\n\n        if (!this.config.scrollDirection || this.config.scrollDirection === 'horizontal') {\n            this.startScrollHorizontallyForWindow(event);\n        }\n    }\n\n    private startScrollVerticallyForWindow(event: DraggableEvent): void {\n        const scrollingElement =\n            document.scrollingElement || document.documentElement || document.body;\n\n        // NOTE: Using `window.pageYOffset` here because IE doesn't have `window.scrollY`.\n        if (event.pageY - window.pageYOffset < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, -Draggable.SCROLL_SPEED, 'scrollTop');\n        } else if (\n            window.innerHeight - (event.pageY - window.pageYOffset) <\n            this.config.scrollEdge\n        ) {\n            this.startAutoScrolling(scrollingElement, Draggable.SCROLL_SPEED, 'scrollTop');\n        }\n    }\n\n    private startScrollHorizontallyForWindow(event: DraggableEvent): void {\n        const scrollingElement =\n            document.scrollingElement || document.documentElement || document.body;\n\n        // NOTE: Using `window.pageXOffset` here because IE doesn't have `window.scrollX`.\n        if (event.pageX - window.pageXOffset < this.config.scrollEdge) {\n            this.startAutoScrolling(scrollingElement, -Draggable.SCROLL_SPEED, 'scrollLeft');\n        } else if (\n            window.innerWidth - (event.pageX - window.pageXOffset) <\n            this.config.scrollEdge\n        ) {\n            this.startAutoScrolling(scrollingElement, Draggable.SCROLL_SPEED, 'scrollLeft');\n        }\n    }\n\n    private getScrollContainer(node): HTMLElement {\n        const nodeOuterHeight = utils.getElementOuterHeight(node);\n\n        if (node.scrollHeight > Math.ceil(nodeOuterHeight)) {\n            return node;\n        }\n\n        if (!new RegExp('(body|html)', 'i').test(node.parentNode.tagName)) {\n            return this.getScrollContainer(node.parentNode);\n        }\n\n        return null;\n    }\n\n    private startAutoScrolling(node, amount, direction) {\n        this.autoScrollingInterval.push(\n            this.requestAnimationFrame(\n                function() {\n                    this.startAutoScrolling(node, amount, direction);\n                }.bind(this)\n            )\n        );\n\n        return (node[direction] += amount * 0.25);\n    }\n\n    private getOffset(el) {\n        const rect = el.getBoundingClientRect();\n        return {\n            left: rect.left + this.getScroll('scrollLeft', 'pageXOffset'),\n            top: rect.top + this.getScroll('scrollTop', 'pageYOffset')\n        };\n    }\n\n    private getScroll(scrollProp, offsetProp) {\n        if (typeof window[offsetProp] !== 'undefined') {\n            return window[offsetProp];\n        }\n        if (document.documentElement.clientHeight) {\n            return document.documentElement[scrollProp];\n        }\n        return document.body[scrollProp];\n    }\n\n    private isDragingByHandler(event: DraggableEvent): boolean {\n        if (!this.isValidDragHandler(event.target)) {\n            return false;\n        }\n\n        return (\n            !this.config.handlerClass ||\n            (this.config.handlerClass &&\n                this.hasElementWithClass(this.config.handlerClass, event.target))\n        );\n    }\n\n    private isValidDragHandler(targetEl: any): boolean {\n        return ['input', 'textarea'].indexOf(targetEl.tagName.toLowerCase()) === -1;\n    }\n\n    private inRange(startEvent: DraggableEvent, moveEvent: DraggableEvent, range: number): boolean {\n        return (\n            Math.abs(moveEvent.clientX - startEvent.clientX) > range ||\n            Math.abs(moveEvent.clientY - startEvent.clientY) > range\n        );\n    }\n\n    private hasElementWithClass(className: string, target: any): boolean {\n        while (target !== this.element) {\n            if (target.classList.contains(className)) {\n                return true;\n            }\n            target = target.parentElement;\n        }\n        return false;\n    }\n\n    private pauseEvent(e: Event): void {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n        }\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        e.cancelBubble = true;\n        e.returnValue = false;\n    }\n\n    private fixProblemWithDnDForIE(element: Element) {\n        if (this.isTouchDevice() && this.isIEorEdge() && (<HTMLElement>element).style) {\n            (<HTMLElement>element).style['touch-action'] = 'none';\n        }\n    }\n\n    private removeTouchActionNone(element: Element) {\n        if (!(<HTMLElement>element).style) {\n            return;\n        }\n        (<HTMLElement>element).style['touch-action'] = '';\n    }\n\n    private addTouchActionNone(element) {\n        if (!(<HTMLElement>element).style) {\n            return;\n        }\n        (<HTMLElement>element).style['touch-action'] = 'none';\n    }\n\n    private isTouchDevice() {\n        return (\n            'ontouchstart' in window || navigator.maxTouchPoints // works on most browsers\n        ); // works on IE10/11 and Surface\n    }\n\n    private isIEorEdge() {\n        const ua = window.navigator.userAgent;\n\n        const msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n        }\n\n        const trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            const rv = ua.indexOf('rv:');\n            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n        }\n\n        const edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n        }\n\n        // other browser\n        return false;\n    }\n}\n","import { Component, OnInit, ElementRef, Inject, Host, Input, Output,\n    EventEmitter, SimpleChanges, OnChanges, OnDestroy, HostBinding,\n    ChangeDetectionStrategy, AfterViewInit, NgZone, ViewEncapsulation } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { GridsterService } from '../gridster.service';\nimport { GridsterPrototypeService } from '../gridster-prototype/gridster-prototype.service';\n\nimport { GridListItem } from '../gridList/GridListItem';\nimport { DraggableEvent } from '../utils/DraggableEvent';\nimport { Draggable } from '../utils/draggable';\nimport { IGridsterOptions } from '../IGridsterOptions';\nimport { GridList } from '../gridList/gridList';\nimport { utils } from '../utils/utils';\n\n@Component({\n    selector: 'ngx-gridster-item',\n    template: `<div class=\"gridster-item-inner\">\n      <ng-content></ng-content>\n      <div class=\"gridster-item-resizable-handler handle-s\"></div>\n      <div class=\"gridster-item-resizable-handler handle-e\"></div>\n      <div class=\"gridster-item-resizable-handler handle-n\"></div>\n      <div class=\"gridster-item-resizable-handler handle-w\"></div>\n      <div class=\"gridster-item-resizable-handler handle-se\"></div>\n      <div class=\"gridster-item-resizable-handler handle-ne\"></div>\n      <div class=\"gridster-item-resizable-handler handle-sw\"></div>\n      <div class=\"gridster-item-resizable-handler handle-nw\"></div>\n    </div>`,\n    styles: [`\n    ngx-gridster-item {\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        -webkit-transition: none;\n        transition: none;\n    }\n\n    .gridster--ready ngx-gridster-item {\n        transition: all 200ms ease;\n        transition-property: left, top;\n    }\n\n    .gridster--ready.css-transform ngx-gridster-item  {\n        transition-property: transform;\n    }\n\n    .gridster--ready ngx-gridster-item.is-dragging,\n    .gridster--ready ngx-gridster-item.is-resizing {\n        -webkit-transition: none;\n        transition: none;\n        z-index: 9999;\n    }\n\n    ngx-gridster-item.no-transition {\n        -webkit-transition: none;\n        transition: none;\n    }\n    ngx-gridster-item .gridster-item-resizable-handler {\n        position: absolute;\n        z-index: 2;\n        display: none;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-n {\n      cursor: n-resize;\n      height: 10px;\n      right: 0;\n      top: 0;\n      left: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-e {\n      cursor: e-resize;\n      width: 10px;\n      bottom: 0;\n      right: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-s {\n      cursor: s-resize;\n      height: 10px;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-w {\n      cursor: w-resize;\n      width: 10px;\n      left: 0;\n      top: 0;\n      bottom: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-ne {\n      cursor: ne-resize;\n      width: 10px;\n      height: 10px;\n      right: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-nw {\n      cursor: nw-resize;\n      width: 10px;\n      height: 10px;\n      left: 0;\n      top: 0;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-se {\n      cursor: se-resize;\n      width: 0;\n      height: 0;\n      right: 0;\n      bottom: 0;\n      border-style: solid;\n      border-width: 0 0 10px 10px;\n      border-color: transparent;\n    }\n\n    ngx-gridster-item .gridster-item-resizable-handler.handle-sw {\n      cursor: sw-resize;\n      width: 10px;\n      height: 10px;\n      left: 0;\n      bottom: 0;\n    }\n\n    ngx-gridster-item:hover .gridster-item-resizable-handler.handle-se {\n      border-color: transparent transparent #ccc\n    }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n    @Input() x: number;\n    @Output() xChange = new EventEmitter<number>(true);\n    @Input() y: number;\n    @Output() yChange = new EventEmitter<number>(true);\n\n    @Input() xSm: number;\n    @Output() xSmChange = new EventEmitter<number>(true);\n    @Input() ySm: number;\n    @Output() ySmChange = new EventEmitter<number>(true);\n\n    @Input() xMd: number;\n    @Output() xMdChange = new EventEmitter<number>(true);\n    @Input() yMd: number;\n    @Output() yMdChange = new EventEmitter<number>(true);\n\n    @Input() xLg: number;\n    @Output() xLgChange = new EventEmitter<number>(true);\n    @Input() yLg: number;\n    @Output() yLgChange = new EventEmitter<number>(true);\n\n    @Input() xXl: number;\n    @Output() xXlChange = new EventEmitter<number>(true);\n    @Input() yXl: number;\n    @Output() yXlChange = new EventEmitter<number>(true);\n\n\n    @Input() w: number;\n    @Output() wChange = new EventEmitter<number>(true);\n    @Input() h: number;\n    @Output() hChange = new EventEmitter<number>(true);\n\n    @Input() wSm: number;\n    @Output() wSmChange = new EventEmitter<number>(true);\n    @Input() hSm: number;\n    @Output() hSmChange = new EventEmitter<number>(true);\n\n    @Input() wMd: number;\n    @Output() wMdChange = new EventEmitter<number>(true);\n    @Input() hMd: number;\n    @Output() hMdChange = new EventEmitter<number>(true);\n\n    @Input() wLg: number;\n    @Output() wLgChange = new EventEmitter<number>(true);\n    @Input() hLg: number;\n    @Output() hLgChange = new EventEmitter<number>(true);\n\n    @Input() wXl: number;\n    @Output() wXlChange = new EventEmitter<number>(true);\n    @Input() hXl: number;\n    @Output() hXlChange = new EventEmitter<number>(true);\n\n    @Output() change = new EventEmitter<any>(true);\n    @Output() start = new EventEmitter<any>(true);\n    @Output() end = new EventEmitter<any>(true);\n\n    @Input() dragAndDrop = true;\n    @Input() resizable = true;\n\n    @Input() options: any = {};\n\n    autoSize: boolean;\n\n    @HostBinding('class.is-dragging') isDragging = false;\n    @HostBinding('class.is-resizing') isResizing = false;\n\n    $element: HTMLElement;\n    elementRef: ElementRef;\n    /**\n     * Gridster provider service\n     */\n    gridster: GridsterService;\n\n    item: GridListItem;\n\n    set positionX(value: number) {\n        this._positionX = value;\n    }\n    get positionX() {\n        return this._positionX;\n    }\n    set positionY(value: number) {\n        this._positionY = value;\n    }\n    get positionY() {\n        return this._positionY;\n    }\n    private _positionX: number;\n    private _positionY: number;\n\n    private defaultOptions: any = {\n        minWidth: 1,\n        minHeight: 1,\n        maxWidth: Infinity,\n        maxHeight: Infinity,\n        defaultWidth: 1,\n        defaultHeight: 1\n    };\n    private subscriptions: Array<Subscription> = [];\n    private dragSubscriptions: Array<Subscription> = [];\n    private resizeSubscriptions: Array<Subscription> = [];\n\n    constructor(private zone: NgZone,\n                private gridsterPrototypeService: GridsterPrototypeService,\n                @Inject(ElementRef) elementRef: ElementRef,\n                @Inject(GridsterService) gridster: GridsterService) {\n\n        this.gridster = gridster;\n        this.elementRef = elementRef;\n        this.$element = elementRef.nativeElement;\n\n        this.item = (new GridListItem()).setFromGridsterItem(this);\n\n        // if gridster is initialized do not show animation on new grid-item construct\n        if (this.gridster.isInitialized()) {\n            this.preventAnimation();\n        }\n    }\n\n    ngOnInit() {\n        this.options = Object.assign(this.defaultOptions, this.options);\n\n        this.w = this.w || this.options.defaultWidth;\n        this.h = this.h || this.options.defaultHeight;\n        this.wSm = this.wSm || this.w;\n        this.hSm = this.hSm || this.h;\n        this.wMd = this.wMd || this.w;\n        this.hMd = this.hMd || this.h;\n        this.wLg = this.wLg || this.w;\n        this.hLg = this.hLg || this.h;\n        this.wXl = this.wXl || this.w;\n        this.hXl = this.hXl || this.h;\n\n        if (this.gridster.isInitialized()) {\n            this.setPositionsOnItem();\n        }\n\n        this.gridster.registerItem(this.item);\n\n        this.gridster.calculateCellSize();\n        this.item.applySize();\n        this.item.applyPosition();\n\n        if (this.gridster.options.dragAndDrop && this.dragAndDrop) {\n            this.enableDragDrop();\n        }\n\n        if (this.gridster.isInitialized()) {\n            this.gridster.render();\n            this.gridster.updateCachedItems();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.gridster.options.resizable && this.item.resizable) {\n            this.enableResizable();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.gridster.gridList) {\n            return;\n        }\n        let rerender = false;\n\n        ['w', ...Object.keys(GridListItem.W_PROPERTY_MAP).map(breakpoint => GridListItem.W_PROPERTY_MAP[breakpoint])]\n        .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n        .forEach((propName: string) => {\n            if (changes[propName].currentValue > this.options.maxWidth) {\n                this[propName] = this.options.maxWidth;\n                setTimeout(() => this[propName + 'Change'].emit(this[propName]));\n            }\n            rerender = true;\n        });\n\n        ['h', ...Object.keys(GridListItem.H_PROPERTY_MAP).map(breakpoint => GridListItem.H_PROPERTY_MAP[breakpoint])]\n            .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n            .forEach((propName: string) => {\n                if (changes[propName].currentValue > this.options.maxHeight) {\n                    this[propName] = this.options.maxHeight;\n                    setTimeout(() => this[propName + 'Change'].emit(this[propName]));\n                }\n                rerender = true;\n            });\n\n        ['x', 'y',\n        ...Object.keys(GridListItem.X_PROPERTY_MAP).map(breakpoint => GridListItem.X_PROPERTY_MAP[breakpoint]),\n        ...Object.keys(GridListItem.Y_PROPERTY_MAP).map(breakpoint => GridListItem.Y_PROPERTY_MAP[breakpoint])]\n            .filter(propName => changes[propName] && !changes[propName].isFirstChange())\n            .forEach((propName: string) => rerender = true);\n\n        if (changes['dragAndDrop'] && !changes['dragAndDrop'].isFirstChange()) {\n            if (changes['dragAndDrop'].currentValue && this.gridster.options.dragAndDrop) {\n                this.enableDragDrop();\n            } else {\n                this.disableDraggable();\n            }\n        }\n        if (changes['resizable'] && !changes['resizable'].isFirstChange()) {\n            if (changes['resizable'].currentValue && this.gridster.options.resizable) {\n                this.enableResizable();\n            } else {\n                this.disableResizable();\n            }\n        }\n\n        if (rerender && this.gridster.gridsterComponent.isReady) {\n            this.gridster.debounceRenderSubject.next(null);\n        }\n    }\n\n    ngOnDestroy() {\n        this.gridster.removeItem(this.item);\n        this.gridster.itemRemoveSubject.next(this.item);\n\n        this.subscriptions.forEach((sub: Subscription) => {\n            sub.unsubscribe();\n        });\n        this.disableDraggable();\n        this.disableResizable();\n    }\n\n    updateElemenetPosition() {\n        if (this.gridster.options.useCSSTransforms) {\n            utils.setTransform(this.$element, {x: this._positionX, y: this._positionY});\n        } else {\n            utils.setCssElementPosition(this.$element, {x: this._positionX, y: this._positionY});\n        }\n    }\n\n    setPositionsOnItem() {\n        if (!this.item.hasPositions(this.gridster.options.breakpoint)) {\n            this.setPositionsForGrid(this.gridster.options);\n        }\n\n        this.gridster.gridsterOptions.responsiveOptions\n            .filter((options: IGridsterOptions) => !this.item.hasPositions(options.breakpoint))\n            .forEach((options: IGridsterOptions) => this.setPositionsForGrid(options));\n    }\n\n    public enableResizable() {\n        if (this.resizeSubscriptions.length) {\n            return;\n        }\n\n        this.zone.runOutsideAngular(() => {\n            this.getResizeHandlers().forEach((handler) => {\n                const direction = this.getResizeDirection(handler);\n\n                if (this.hasResizableHandle(direction)) {\n                    handler.style.display = 'block';\n                }\n\n                const draggable = new Draggable(handler, this.getResizableOptions());\n\n                let startEvent;\n                let startData;\n                let cursorToElementPosition;\n\n                const dragStartSub = draggable.dragStart\n                    .subscribe((event: DraggableEvent) => {\n                        this.zone.run(() => {\n                            this.isResizing = true;\n\n                            startEvent = event;\n                            startData = this.createResizeStartObject(direction);\n                            cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n\n                            this.gridster.onResizeStart(this.item);\n                            this.onStart('resize');\n                        });\n                    });\n\n                const dragSub = draggable.dragMove\n                    .subscribe((event: DraggableEvent) => {\n                        const scrollData = this.gridster.gridsterScrollData;\n\n                        this.resizeElement({\n                            direction,\n                            startData,\n                            position: {\n                                x: event.clientX - cursorToElementPosition.x - this.gridster.gridsterRect.left,\n                                y: event.clientY - cursorToElementPosition.y - this.gridster.gridsterRect.top\n                            },\n                            startEvent,\n                            moveEvent: event,\n                            scrollDiffX: scrollData.scrollLeft - startData.scrollLeft,\n                            scrollDiffY: scrollData.scrollTop - startData.scrollTop\n                        });\n\n                        this.gridster.onResizeDrag(this.item);\n                    });\n\n                const dragStopSub = draggable.dragStop\n                    .subscribe(() => {\n                        this.zone.run(() => {\n                            this.isResizing = false;\n\n                            this.gridster.onResizeStop(this.item);\n                            this.onEnd('resize');\n                        });\n                    });\n\n                this.resizeSubscriptions = this.resizeSubscriptions.concat([dragStartSub, dragSub, dragStopSub]);\n\n            });\n        });\n    }\n\n    public disableResizable() {\n        this.resizeSubscriptions.forEach((sub: Subscription) => {\n            sub.unsubscribe();\n        });\n        this.resizeSubscriptions = [];\n\n        [].forEach.call(this.$element.querySelectorAll('.gridster-item-resizable-handler'), (handler) => {\n            handler.style.display = '';\n        });\n    }\n\n    public enableDragDrop() {\n        if (this.dragSubscriptions.length) {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            let cursorToElementPosition;\n\n            const draggable = new Draggable(this.$element, this.getDraggableOptions());\n\n            const dragStartSub = draggable.dragStart\n                .subscribe((event: DraggableEvent) => {\n                    this.zone.run(() => {\n                        this.gridster.onStart(this.item);\n                        this.isDragging = true;\n                        this.onStart('drag');\n\n                        cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n                    });\n                });\n\n            const dragSub = draggable.dragMove\n                .subscribe((event: DraggableEvent) => {\n\n                    this.positionY = (event.clientY - cursorToElementPosition.y -\n                        this.gridster.gridsterRect.top);\n                    this.positionX = (event.clientX - cursorToElementPosition.x -\n                        this.gridster.gridsterRect.left);\n                    this.updateElemenetPosition();\n\n                    this.gridster.onDrag(this.item);\n                });\n\n            const dragStopSub = draggable.dragStop\n                .subscribe(() => {\n                    this.zone.run(() => {\n                        this.gridster.onStop(this.item);\n                        this.gridster.debounceRenderSubject.next(null);\n                        this.isDragging = false;\n                        this.onEnd('drag');\n                    });\n                });\n\n            this.dragSubscriptions = this.dragSubscriptions.concat([dragStartSub, dragSub, dragStopSub]);\n        });\n    }\n\n    public disableDraggable() {\n        this.dragSubscriptions.forEach((sub: Subscription) => {\n            sub.unsubscribe();\n        });\n        this.dragSubscriptions = [];\n    }\n\n    private getResizeHandlers(): HTMLElement[]  {\n        return [].filter.call(this.$element.children[0].children, (el) => {\n\n            return el.classList.contains('gridster-item-resizable-handler');\n        });\n    }\n\n    private getDraggableOptions() {\n        return { scrollDirection: this.gridster.options.direction, ...this.gridster.draggableOptions };\n    }\n\n    private getResizableOptions() {\n        const resizableOptions: any = {};\n\n        if (this.gridster.draggableOptions.scroll || this.gridster.draggableOptions.scroll === false) {\n            resizableOptions.scroll = this.gridster.draggableOptions.scroll;\n        }\n        if (this.gridster.draggableOptions.scrollEdge) {\n            resizableOptions.scrollEdge = this.gridster.draggableOptions.scrollEdge;\n        }\n\n        resizableOptions.scrollDirection = this.gridster.options.direction;\n\n        return resizableOptions;\n    }\n\n    private hasResizableHandle(direction: string): boolean {\n        const isItemResizable = this.gridster.options.resizable && this.item.resizable;\n        const resizeHandles = this.gridster.options.resizeHandles;\n\n        return isItemResizable && (!resizeHandles || (resizeHandles && !!resizeHandles[direction]));\n    }\n\n    private setPositionsForGrid(options: IGridsterOptions) {\n        let x, y;\n\n        const position = this.findPosition(options);\n        x = options.direction === 'horizontal' ? position[0] : position[1];\n        y = options.direction === 'horizontal' ? position[1] : position[0];\n\n        this.item.setValueX(x, options.breakpoint);\n        this.item.setValueY(y, options.breakpoint);\n\n        setTimeout(() => {\n            this.item.triggerChangeX(options.breakpoint);\n            this.item.triggerChangeY(options.breakpoint);\n        });\n    }\n\n    private findPosition(options: IGridsterOptions): Array<number> {\n        const gridList = new GridList(\n            this.gridster.items.map(item => item.copyForBreakpoint(options.breakpoint)),\n            options\n        );\n\n        return gridList.findPositionForItem(this.item, {x: 0, y: 0});\n    }\n\n    private createResizeStartObject(direction: string) {\n        const scrollData = this.gridster.gridsterScrollData;\n\n        return {\n            top: this.positionY,\n            left: this.positionX,\n            height: parseInt(this.$element.style.height, 10),\n            width: parseInt(this.$element.style.width, 10),\n            minX: Math.max(this.item.x + this.item.w - this.options.maxWidth, 0),\n            maxX: this.item.x + this.item.w - this.options.minWidth,\n            minY: Math.max(this.item.y + this.item.h - this.options.maxHeight, 0),\n            maxY: this.item.y + this.item.h - this.options.minHeight,\n            minW: this.options.minWidth,\n            maxW: Math.min(\n                this.options.maxWidth,\n                (this.gridster.options.direction === 'vertical' && direction.indexOf('w') < 0) ?\n                this.gridster.options.lanes - this.item.x : this.options.maxWidth,\n                direction.indexOf('w') >= 0 ?\n                this.item.x + this.item.w : this.options.maxWidth\n            ),\n            minH: this.options.minHeight,\n            maxH: Math.min(\n                this.options.maxHeight,\n                (this.gridster.options.direction === 'horizontal' && direction.indexOf('n') < 0) ?\n                this.gridster.options.lanes - this.item.y : this.options.maxHeight,\n                direction.indexOf('n') >= 0 ?\n                this.item.y + this.item.h : this.options.maxHeight\n            ),\n            scrollLeft: scrollData.scrollLeft,\n            scrollTop: scrollData.scrollTop\n        };\n    }\n\n    private onEnd(actionType: string): void {\n        this.end.emit({action: actionType, item: this.item});\n    }\n\n    private onStart(actionType: string): void {\n        this.start.emit({action: actionType, item: this.item});\n    }\n\n    /**\n     * Assign class for short while to prevent animation of grid item component\n     */\n    private preventAnimation(): GridsterItemComponent {\n        this.$element.classList.add('no-transition');\n        setTimeout(() => {\n            this.$element.classList.remove('no-transition');\n        }, 500);\n\n        return this;\n    }\n\n    private getResizeDirection(handler: Element): string {\n        for (let i = handler.classList.length - 1; i >= 0; i--) {\n            if (handler.classList[i].match('handle-')) {\n                return handler.classList[i].split('-')[1];\n            }\n        }\n    }\n\n    private resizeElement(config: any): void {\n        // north\n        if (config.direction.indexOf('n') >= 0) {\n            this.resizeToNorth(config);\n        }\n        // west\n        if (config.direction.indexOf('w') >= 0) {\n            this.resizeToWest(config);\n        }\n        // east\n        if (config.direction.indexOf('e') >= 0) {\n            this.resizeToEast(config);\n        }\n        // south\n        if (config.direction.indexOf('s') >= 0) {\n            this.resizeToSouth(config);\n        }\n    }\n\n    private resizeToNorth(config: any): void {\n        const height = config.startData.height + config.startEvent.clientY -\n            config.moveEvent.clientY - config.scrollDiffY;\n\n        if (height < (config.startData.minH * this.gridster.cellHeight)) {\n            this.setMinHeight('n', config);\n        } else if (height > (config.startData.maxH * this.gridster.cellHeight)) {\n            this.setMaxHeight('n', config);\n        } else {\n            this.positionY = config.position.y;\n            this.$element.style.height = height + 'px';\n        }\n    }\n\n    private resizeToWest(config: any): void {\n        const width = config.startData.width + config.startEvent.clientX -\n            config.moveEvent.clientX - config.scrollDiffX;\n\n        if (width < (config.startData.minW * this.gridster.cellWidth)) {\n            this.setMinWidth('w', config);\n        } else if (width > (config.startData.maxW * this.gridster.cellWidth)) {\n            this.setMaxWidth('w', config);\n        } else {\n            this.positionX = config.position.x;\n            this.updateElemenetPosition();\n            this.$element.style.width = width + 'px';\n        }\n    }\n\n    private resizeToEast(config: any): void {\n        const width = config.startData.width + config.moveEvent.clientX -\n            config.startEvent.clientX + config.scrollDiffX;\n\n        if (width > (config.startData.maxW * this.gridster.cellWidth)) {\n            this.setMaxWidth('e', config);\n        } else if (width < (config.startData.minW * this.gridster.cellWidth)) {\n            this.setMinWidth('e', config);\n        } else {\n            this.$element.style.width = width + 'px';\n        }\n    }\n\n    private resizeToSouth(config: any): void {\n        const height = config.startData.height + config.moveEvent.clientY -\n            config.startEvent.clientY + config.scrollDiffY;\n\n        if (height > config.startData.maxH * this.gridster.cellHeight) {\n            this.setMaxHeight('s', config);\n        } else if (height < config.startData.minH * this.gridster.cellHeight) {\n            this.setMinHeight('s', config);\n        } else {\n            this.$element.style.height = height + 'px';\n        }\n    }\n\n    private setMinHeight(direction: string, config: any): void {\n        if (direction === 'n') {\n            this.$element.style.height = (config.startData.minH * this.gridster.cellHeight) + 'px';\n            this.positionY = config.startData.maxY * this.gridster.cellHeight;\n        } else {\n            this.$element.style.height = (config.startData.minH * this.gridster.cellHeight) + 'px';\n        }\n    }\n\n    private setMinWidth(direction: string, config: any): void {\n        if (direction === 'w') {\n            this.$element.style.width = (config.startData.minW * this.gridster.cellWidth) + 'px';\n            this.positionX = config.startData.maxX * this.gridster.cellWidth;\n            this.updateElemenetPosition();\n        } else {\n            this.$element.style.width = (config.startData.minW * this.gridster.cellWidth) + 'px';\n        }\n    }\n\n    private setMaxHeight(direction: string, config: any): void {\n\n        if (direction === 'n') {\n            this.$element.style.height = (config.startData.maxH * this.gridster.cellHeight) + 'px';\n            this.positionY = config.startData.minY * this.gridster.cellHeight;\n        } else {\n            this.$element.style.height = (config.startData.maxH * this.gridster.cellHeight) + 'px';\n        }\n    }\n\n    private setMaxWidth(direction: string, config: any): void {\n\n        if (direction === 'w') {\n            this.$element.style.width = (config.startData.maxW * this.gridster.cellWidth) + 'px';\n            this.positionX = config.startData.minX * this.gridster.cellWidth;\n            this.updateElemenetPosition();\n        } else {\n            this.$element.style.width = (config.startData.maxW * this.gridster.cellWidth) + 'px';\n        }\n    }\n}\n","import { Directive, ElementRef, Input, Output, HostBinding, EventEmitter, OnInit, OnDestroy,\n    NgZone} from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\nimport { GridsterPrototypeService } from './gridster-prototype.service';\nimport { GridListItem } from '../gridList/GridListItem';\nimport { GridsterService } from '../gridster.service';\nimport { DraggableEvent } from '../utils/DraggableEvent';\nimport { Draggable } from '../utils/draggable';\nimport { utils } from '../utils/utils';\n\n@Directive({\n    selector: '[ngxGridsterItemPrototype]'\n})\nexport class GridsterItemPrototypeDirective implements OnInit, OnDestroy {\n    @Output() drop = new EventEmitter();\n    @Output() start = new EventEmitter();\n    @Output() cancel = new EventEmitter();\n    @Output() enter = new EventEmitter();\n    @Output() out = new EventEmitter();\n\n    @Input() data: any;\n    @Input() config: any = {};\n\n    public x = 0;\n    public y = 0;\n    @Input() w: number;\n    @Input() wSm: number;\n    @Input() wMd: number;\n    @Input() wLg: number;\n    @Input() wXl: number;\n    @Input() h: number;\n    @Input() hSm: number;\n    @Input() hMd: number;\n    @Input() hLg: number;\n    @Input() hXl: number;\n\n    positionX: number;\n    positionY: number;\n\n    autoSize = false;\n\n    $element: HTMLElement;\n\n    /**\n     * Mouse drag observable\n     */\n    drag: Observable<any>;\n\n    /**\n     * Subscribtion for drag observable\n     */\n    dragSubscription: Subscription;\n\n    isDragging = false;\n\n    item: GridListItem;\n\n    containerRectange: ClientRect;\n\n    private dragContextGridster: GridsterService;\n    private parentRect: ClientRect;\n    private parentOffset: {left: number, top: number};\n\n    private subscribtions: Array<Subscription> = [];\n\n    // must be set to true because of item dragAndDrop configuration\n    get dragAndDrop(): boolean {\n        return true;\n    }\n\n    get gridster(): GridsterService {\n        return this.dragContextGridster;\n    }\n\n    constructor(private zone: NgZone,\n                private elementRef: ElementRef,\n                private gridsterPrototype: GridsterPrototypeService) {\n\n        this.item = (new GridListItem()).setFromGridsterItemPrototype(this);\n    }\n\n    ngOnInit() {\n        this.wSm = this.wSm || this.w;\n        this.hSm = this.hSm || this.h;\n        this.wMd = this.wMd || this.w;\n        this.hMd = this.hMd || this.h;\n        this.wLg = this.wLg || this.w;\n        this.hLg = this.hLg || this.h;\n        this.wXl = this.wXl || this.w;\n        this.hXl = this.hXl || this.h;\n        this.zone.runOutsideAngular(() => {\n            this.enableDragDrop();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscribtions.forEach((sub: Subscription) => {\n            sub.unsubscribe();\n        });\n    }\n\n    onDrop (gridster: GridsterService): void {\n        if (!this.config.helper) {\n            this.$element.parentNode.removeChild(this.$element);\n        }\n\n        this.drop.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n\n    onCancel (): void {\n        this.cancel.emit({item: this.item});\n    }\n\n    onEnter (gridster: GridsterService): void {\n        this.enter.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n\n    onOver (gridster: GridsterService): void {}\n\n    onOut (gridster: GridsterService): void {\n        this.out.emit({\n            item: this.item,\n            gridster: gridster\n        });\n    }\n\n    getPositionToGridster(gridster: GridsterService) {\n        const relativeContainerCoords = this.getContainerCoordsToGridster(gridster);\n\n        return {\n            y: this.positionY - relativeContainerCoords.top,\n            x: this.positionX - relativeContainerCoords.left\n        };\n    }\n\n    setDragContextGridster(gridster: GridsterService) {\n        this.dragContextGridster = gridster;\n    }\n\n    private getContainerCoordsToGridster(gridster: GridsterService): {top: number, left: number} {\n        return {\n            left: gridster.gridsterRect.left - this.parentRect.left,\n            top: gridster.gridsterRect.top - this.parentRect.top\n        };\n    }\n\n    private enableDragDrop() {\n        let cursorToElementPosition;\n        const draggable = new Draggable(this.elementRef.nativeElement);\n\n        const dragStartSub = draggable.dragStart\n            .subscribe((event: DraggableEvent) => {\n                this.zone.run(() => {\n                    this.$element = this.provideDragElement();\n                    this.containerRectange = this.$element.parentElement.getBoundingClientRect();\n                    this.updateParentElementData();\n                    this.onStart(event);\n\n                    cursorToElementPosition = event.getRelativeCoordinates(this.$element);\n                });\n            });\n\n        const dragSub = draggable.dragMove\n            .subscribe((event: DraggableEvent) => {\n\n                this.setElementPosition(this.$element, {\n                    x: event.clientX - cursorToElementPosition.x  - this.parentRect.left,\n                    y: event.clientY - cursorToElementPosition.y  - this.parentRect.top\n                });\n\n                this.onDrag(event);\n            });\n\n        const dragStopSub = draggable.dragStop\n            .subscribe((event: DraggableEvent) => {\n                this.zone.run(() => {\n                    this.onStop(event);\n                    this.$element = null;\n                });\n            });\n\n        const scrollSub = fromEvent(document, 'scroll')\n            .subscribe(() => {\n                if (this.$element) {\n                    this.updateParentElementData();\n                }\n            });\n\n        this.subscribtions = this.subscribtions.concat([dragStartSub, dragSub, dragStopSub, scrollSub]);\n    }\n\n    private setElementPosition(element: HTMLElement, position: {x: number, y: number}) {\n        this.positionX = position.x;\n        this.positionY = position.y;\n        utils.setCssElementPosition(element, position);\n    }\n\n    private updateParentElementData() {\n        this.parentRect = this.$element.parentElement.getBoundingClientRect();\n        this.parentOffset = {\n            left: this.$element.parentElement.offsetLeft,\n            top: this.$element.parentElement.offsetTop\n        };\n    }\n\n    private onStart (event: DraggableEvent): void {\n        this.isDragging = true;\n\n        this.$element.style.pointerEvents = 'none';\n        this.$element.style.position = 'absolute';\n\n        this.gridsterPrototype.dragItemStart(this, event);\n\n        this.start.emit({item: this.item});\n    }\n\n    private onDrag (event: DraggableEvent): void {\n        this.gridsterPrototype.updatePrototypePosition(this, event);\n    }\n\n    private onStop (event: DraggableEvent): void {\n        this.gridsterPrototype.dragItemStop(this, event);\n\n        this.isDragging = false;\n        this.$element.style.pointerEvents = 'auto';\n        this.$element.style.position = '';\n        utils.resetCSSElementPosition(this.$element);\n\n        if (this.config.helper) {\n            this.$element.parentNode.removeChild(this.$element);\n        }\n    }\n\n    private provideDragElement (): HTMLElement {\n        let dragElement = this.elementRef.nativeElement;\n\n        if (this.config.helper) {\n            dragElement = <any>(dragElement).cloneNode(true);\n\n            document.body.appendChild(this.fixStylesForBodyHelper(dragElement));\n        } else {\n            this.fixStylesForRelativeElement(dragElement);\n        }\n\n        return dragElement;\n    }\n\n    private fixStylesForRelativeElement(el: HTMLElement) {\n        if (window.getComputedStyle(el).position === 'absolute') {\n            return el;\n        }\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        this.containerRectange = el.parentElement.getBoundingClientRect();\n\n        el.style.position = 'absolute';\n        this.setElementPosition(el, {\n            x: rect.left - this.containerRectange.left,\n            y: rect.top - this.containerRectange.top\n        });\n\n        return el;\n    }\n\n    /**\n     * When element is cloned and append to body it should have position absolute and coords set by original\n     * relative prototype element position.\n     */\n    private fixStylesForBodyHelper (el: HTMLElement) {\n        const bodyRect = document.body.getBoundingClientRect();\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n        el.style.position = 'absolute';\n        this.setElementPosition(el, {\n            x: rect.left - bodyRect.left,\n            y: rect.top - bodyRect.top\n        });\n\n        return el;\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GridsterComponent } from './gridster.component';\nimport { GridsterItemComponent } from './gridster-item/gridster-item.component';\nimport { GridsterItemPrototypeDirective } from './gridster-prototype/gridster-item-prototype.directive';\nimport { GridsterPrototypeService } from './gridster-prototype/gridster-prototype.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        GridsterComponent,\n        GridsterItemComponent,\n        GridsterItemPrototypeDirective\n    ],\n    exports: [\n        GridsterComponent,\n        GridsterItemComponent,\n        GridsterItemPrototypeDirective\n    ]\n})\nexport class GridsterModule {\n    static forRoot(): ModuleWithProviders<GridsterModule> {\n    return {\n        ngModule: GridsterModule,\n        providers: [GridsterPrototypeService]\n    };\n}\n}\n\n","/*\n * Public API Surface of gridster\n */\n\nexport * from './lib/gridster.module';\nexport * from './lib/gridster.component';\nexport * from './lib/gridster-item/gridster-item.component';\nexport * from './lib/gridster-prototype/gridster-item-prototype.directive';\nexport * from './lib/IGridsterOptions';\nexport * from './lib/IGridsterDraggableOptions';\nexport * from './lib/GridsterOptions';\nexport * from './lib/gridster-prototype/gridster-prototype.service';\nexport * from './lib/gridster.service';\nexport * from './lib/gridList/GridListItem';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["utils","setCssElementPosition","$element","position","style","left","x","top","y","resetCSSElementPosition","setTransform","translate","resetTransform","clearSelection","document","empty","window","getSelection","removeAllRanges","isElementFitContainer","element","containerEl","containerRect","getBoundingClientRect","elRect","right","bottom","isElementIntersectContainer","elWidth","elHeight","isElementTouchContainer","isCursorAboveElement","event","pageX","pageY","getElementOuterHeight","styleObj","getComputedStyle","parseFloat","getPropertyValue","getRelativeCoordinates","parentElement","parentElementRect","elementRect","getScrollableContainer","node","regex","parents","_node","ps","parentNode","concat","prop","overflow","scroll","test","scrollParent","HTMLElement","SVGElement","i","length","scrollingElement","documentElement","GridCol","lanes","push","prototype","GridList","constructor","options","items","adjustSizeOfItems","generateGrid","toString","widthOfGrid","grid","output","border","item","j","padNumber","indexOf","setOption","name","value","resetGrid","markItemPositionToGrid","resizeGrid","currentColumn","sortItemsByPosition","getItemPosition","updateItemPosition","findPositionForItem","Math","max","pullItemsToLeft","start","fixedRow","undefined","itemFitsAtPosition","newCol","newRow","moveAndResize","newPosition","size","w","h","width","height","updateItemSize","resolveCollisions","moveItemToPosition","resizeItem","getChangedItems","initialItems","breakpoint","map","changes","oldValues","initItem","find","initItm","isNew","oldX","getValueX","oldY","getValueY","getValueW","getValueH","filter","itemChange","tryToResolveCollisionsLocally","floating","getItemsCollidingWithItem","pushCollidingItems","fixedItem","isItemFloating","forEach","direction","fixedPosition","dragAndDrop","findLeftMostPositionForItem","isOverFixedArea","itemData","checkItemAboveEmptyArea","itemPrototype","checkItemsInArea","fixItemsPositions","validItems","itemComponent","isItemValidForGrid","invalidItems","gridList","copyForBreakpoint","itemCopy","setItemPosition","itm","cachedItem","cachedItm","setValueX","setValueY","setValueW","setValueH","autoSize","deleteItemPositionFromGrid","isDragging","rowBelowItem","slice","reduce","isFloating","cellItem","min","findDefaultPositionHorizontal","col","colIdx","rowIdx","findDefaultPositionVertical","row","rowStart","rowEnd","colStart","colEnd","sort","item1","item2","position1","position2","ensureColumns","N","collidingItems","itemsAreColliding","_gridList","copy","leftOfItem","rightOfItem","aboveOfItem","belowOfItem","collidingItem","collidingPosition","idx","tail","otherItem","otherPosition","findItemByPosition","getItemByAttribute","key","nr","prefix","GridsterService","_items","_itemsMap","disabledItems","Subject","isInit","itemRemoveSubject","pipe","debounceTime","subscribe","render","updateCachedItems","debounceRenderSubject","isInitialized","registerItem","init","gridsterComponent","draggableOptions","gridsterOptions","updateMaxItemSize","$positionHighlight","removePositionHighlight","initGridList","setTimeout","copyItems","reflowGridster","setReady","applySizeToItems","applyPositionToItems","refreshLines","reflow","calculateCellSize","responsiveSizes","basicOptions","responsiveOptions","removeItem","splice","removeItemFromCache","onResizeStart","currentElement","_maxGridCols","highlightPositionForItem","isResizing","onResizeDrag","newSize","snapItemSizeToGrid","sizeChanged","dragSizeChanged","snapItemPositionToGrid","positionChanged","dragPositionChanged","restoreCachedItems","previousDragPosition","previousDragSize","onResizeStop","next","onStart","updateGridsterElementData","onDrag","cancel","onDragOut","onStop","cellHeight","calculateCellHeight","cellWidth","widthHeightRatio","calculateCellWidth","heightToFontSizeRatio","_fontSize","increaseGridsterSize","shrink","isCurrentElement","applyPosition","child","firstChild","increaseWidthWith","maxItemWidth","increaseHeightWith","maxItemHeight","gridsterContainer","lines","visible","always","linesColor","color","linesBgColor","backgroundColor","linesWidth","bgPosition","backgroundSize","backgroundPosition","backgroundImage","Object","keys","isValidGridItem","apply","gridsterWidth","gridsterHeight","applySize","itemSize","parseInt","colSize","round","rowSize","generateItemPosition","coords","getPositionToGridster","positionX","positionY","calculateSize","calculatePosition","display","triggerOnChange","changeItems","triggerChangeX","triggerChangeY","triggerChangeW","triggerChangeH","change","emit","Injectable","GridsterOptions","gridsterElement","responsiveView","responsiveToParent","resizable","useCSSTransforms","tolerance","sm","md","lg","xl","responsiveContainer","config","extendResponsiveOptions","merge","of","getOptionsByWidth","getElementWidth","fromEvent","responsiveDebounce","distinctUntilChanged","minWidth","assign","defaults","breakpointsMap","curr","innerWidth","clientWidth","body","GridsterPrototypeService","observeDropOver","gridster","dragStopSubject","data","gridsterEl","isOverNestedGridster","call","querySelectorAll","isOverGridster","nestedGridsterEl","tap","onDrop","observeDropOut","onCancel","observeDragOver","over","dragSubject","isOver","isDrop","drop","dragExt","dragStartSubject","scan","prev","isEnter","isOut","share","dragEnter","createDragEnterObservable","dragOut","createDragOutObservable","dragOver","switchMap","takeUntil","dragItemStart","dragItemStop","updatePrototypePosition","createDragOverObservable","dragIsOver","onOver","onEnter","onOut","el","parentItem","closest","GridsterComponent","zone","elementRef","gridsterPrototype","EventEmitter","isReady","isPrototypeEntered","isDisabled","Subscription","nativeElement","ngOnInit","classList","add","subscription","optionsChange","reload","runOutsideAngular","passive","scrollableContainer","ngAfterContentInit","connectGridsterPrototype","ngOnDestroy","unsubscribe","enableDraggable","disableDraggable","enableResizable","disableResizable","gridsterScrollData","getScrollPositionFromParents","gridsterRect","ready","adjustItemsHeightToContent","scrollableItemElementSelector","scrollEl","querySelector","contentEl","lastElementChild","scrollElDistance","scrollElRect","contentRect","contentHeight","ceil","disable","itemIdx","enable","scrollTop","scrollLeft","dropOverObservable","publish","dragObservable","setDragContextGridster","parent","prototypeEnter","prototypeOut","prototypeDrop","connect","enableDragDrop","i0","Component","args","selector","template","providers","changeDetection","OnPush","encapsulation","ViewEncapsulation","None","styles","Input","Output","ViewChild","static","HostBinding","GridListItem","getItem","setFromGridsterItem","isItemSet","Error","setFromGridsterItemPrototype","setFromObjectLiteral","itemObject","getXProperty","getYProperty","getWProperty","getHProperty","hasPositions","updateElemenetPosition","X_PROPERTY_MAP","Y_PROPERTY_MAP","W_PROPERTY_MAP","H_PROPERTY_MAP","DraggableEvent","touches","touchEvent","setDataFromTouchEvent","mouseEvent","setDataFromMouseEvent","isTouchEvent","pauseEvent","stopPropagation","preventDefault","cancelBubble","returnValue","container","pageYOffset","pageXOffset","rect","target","clientX","clientY","type","touch","changedTouches","Draggable","handlerClass","scrollEdge","scrollDirection","autoScrollingInterval","mousedown","dragStart","createDragStartObservable","dragMove","createDragMoveObservable","dragStop","createDragStopObservable","fixProblemWithDnDForIE","requestAnimationFrame","callback","cancelAnimationFrame","cafID","clearTimeout","isDragingByHandler","e","activeElement","blur","startEvent","mousemove","mm","moveEvent","inRange","mouseup","take","addTouchActionNone","skip","val","startScroll","removeTouchActionNone","raf","scrollContainer","getScrollContainer","startScrollForContainer","startScrollForWindow","startScrollVerticallyForContainer","startScrollHorizontallyForContainer","getOffset","startAutoScrolling","SCROLL_SPEED","startScrollVerticallyForWindow","startScrollHorizontallyForWindow","innerHeight","nodeOuterHeight","scrollHeight","RegExp","tagName","amount","bind","getScroll","scrollProp","offsetProp","clientHeight","isValidDragHandler","hasElementWithClass","targetEl","toLowerCase","range","abs","className","contains","isTouchDevice","isIEorEdge","navigator","maxTouchPoints","ua","userAgent","msie","substring","trident","rv","edge","GridsterItemComponent","gridsterPrototypeService","minHeight","maxWidth","Infinity","maxHeight","defaultWidth","defaultHeight","subscriptions","dragSubscriptions","resizeSubscriptions","preventAnimation","_positionX","_positionY","defaultOptions","wSm","hSm","wMd","hMd","wLg","hLg","wXl","hXl","setPositionsOnItem","ngAfterViewInit","ngOnChanges","rerender","propName","isFirstChange","currentValue","sub","setPositionsForGrid","getResizeHandlers","handler","getResizeDirection","hasResizableHandle","draggable","getResizableOptions","startData","cursorToElementPosition","dragStartSub","run","createResizeStartObject","dragSub","scrollData","resizeElement","scrollDiffX","scrollDiffY","dragStopSub","onEnd","getDraggableOptions","children","resizableOptions","isItemResizable","resizeHandles","findPosition","minX","maxX","minY","maxY","minW","maxW","minH","maxH","actionType","end","action","remove","match","split","resizeToNorth","resizeToWest","resizeToEast","resizeToSouth","setMinHeight","setMaxHeight","setMinWidth","setMaxWidth","ElementRef","ChangeDetectionStrategy","Inject","xChange","yChange","xSm","xSmChange","ySm","ySmChange","xMd","xMdChange","yMd","yMdChange","xLg","xLgChange","yLg","yLgChange","xXl","xXlChange","yXl","yXlChange","wChange","hChange","wSmChange","hSmChange","wMdChange","hMdChange","wLgChange","hLgChange","wXlChange","hXlChange","GridsterItemPrototypeDirective","subscribtions","dragContextGridster","helper","removeChild","enter","out","relativeContainerCoords","getContainerCoordsToGridster","parentRect","provideDragElement","containerRectange","updateParentElementData","setElementPosition","scrollSub","parentOffset","offsetLeft","offsetTop","pointerEvents","dragElement","cloneNode","appendChild","fixStylesForBodyHelper","fixStylesForRelativeElement","bodyRect","Directive","GridsterModule","forRoot","ngModule","CommonModule","NgModule","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}